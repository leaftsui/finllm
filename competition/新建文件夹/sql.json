[
    "SELECT \n    ChiName AS 全称,\n    AShareAbbr AS A股简称,\n    LegalRepr AS 法人,\n    LegalConsultant AS 法律顾问,\n    AccountingFirm AS 会计师事务所,\n    SecretaryBD AS 董秘\nFROM \n    AStockBasicInfoDB.LC_StockArchives\nWHERE \n    CompanyCode = '600872';",
    "SELECT \n    AStockShareholderDB.LC_MainSHListNew.CompanyCode,\n    AStockShareholderDB.LC_MainSHListNew.InfoPublDate,\n    AStockShareholderDB.LC_MainSHListNew.SHList,\n    AStockShareholderDB.LC_MainSHListNew.SHKind,\n    AStockShareholderDB.LC_MainSHListNew.SHAttribute\nFROM \n    AStockShareholderDB.LC_MainSHListNew\nWHERE \n    AStockShareholderDB.LC_MainSHListNew.InfoTypeCode = 1\n    AND AStockShareholderDB.LC_MainSHListNew.SHNo = 1\nORDER BY \n    AStockShareholderDB.LC_MainSHListNew.InfoPublDate DESC;",
    "SELECT AStockShareholderDB.LC_MainSHListNew.HoldSumChange, AStockShareholderDB.LC_MainSHListNew.HoldSumChangeRate\nFROM AStockShareholderDB.LC_MainSHListNew\nJOIN AStockShareholderDB.SecuMain ON AStockShareholderDB.LC_MainSHListNew.CompanyCode = AStockShareholderDB.SecuMain.CompanyCode\nWHERE AStockShareholderDB.SecuMain.CompanyCode = '600872'\nAND AStockShareholderDB.LC_MainSHListNew.InfoTypeCode = 1\nAND AStockShareholderDB.LC_MainSHListNew.Year = YEAR(AStockShareholderDB.SecuMain.ControlChangeDate)\nAND AStockShareholderDB.SecuMain.ControlChange = '是';",
    "SELECT COUNT(*) AS NumberOfStocks\nFROM AStockMarketQuotesDB.QT_StockPerformance\nWHERE ClosePrice = HighestClosePriceRM\nAND TradingDay = '2021-12-24'\nAND Ifsuspend = 0;",
    "SELECT InnerCode, TradingDay, HighPrice, ClosePrice\nFROM AStockMarketQuotesDB.QT_StockPerformance\nWHERE ClosePrice > 75\nAND HighPrice = (SELECT MAX(HighPrice) FROM AStockMarketQuotesDB.QT_StockPerformance WHERE TradingDay < '2021-12-24' AND InnerCode = AStockMarketQuotesDB.QT_StockPerformance.InnerCode)\nAND TradingDay = '2021-12-24';",
    "SELECT AStockMarketQuotesDB.QT_StockPerformance.InnerCode\nFROM AStockMarketQuotesDB.QT_StockPerformance\nWHERE AStockMarketQuotesDB.QT_StockPerformance.ClosePrice > 75\n  AND AStockMarketQuotesDB.QT_StockPerformance.TradingDay IN (\n    SELECT MAX(TradingDay)\n    FROM AStockMarketQuotesDB.QT_StockPerformance\n    GROUP BY InnerCode\n  )\n  AND AStockMarketQuotesDB.QT_StockPerformance.HighPriceRY = AStockMarketQuotesDB.QT_StockPerformance.HighestClosePriceRY\n  AND AStockMarketQuotesDB.QT_StockPerformance.TradingDay = (\n    SELECT MAX(TradingDay)\n    FROM AStockMarketQuotesDB.QT_StockPerformance\n    WHERE TradingDay < AStockMarketQuotesDB.QT_StockPerformance.TradingDay\n  )\n  AND AStockMarketQuotesDB.QT_StockPerformance.Ifsuspend = 0\nLIMIT 10;",
    "SELECT SUM(EmployeeSum) AS TotalEmployeeCount\nFROM AStockOperationsDB.LC_Staff\nWHERE EndDate BETWEEN '2019-01-01' AND '2019-12-31'\n  AND ClassfiedMethod = 9000\n  AND MergeMark = 1;",
    "SELECT SUM(EmployeeSum) AS TotalMastersOrAbove\nFROM AStockOperationsDB.LC_Staff\nWHERE ClassfiedMethod = 5000 AND TypeCode = 5015;",
    "SELECT SUM(EmployeeSum) AS TotalRetirees\nFROM AStockOperationsDB.LC_Staff\nWHERE EndDate BETWEEN '2020-01-01' AND '2020-12-31'\n  AND ClassfiedMethod = 9300;",
    "SELECT * FROM AStockIndustryDB.LC_COConcept LIMIT 10;",
    "SELECT \n    COUNT(*) AS TotalStocks,\n    SUM(CASE WHEN LC_COConcept.OutDate IS NOT NULL THEN 1 ELSE 0 END) AS WithdrawnStocks\nFROM \n    AStockIndustryDB.LC_COConcept\nWHERE \n    LC_COConcept.IndiState = 1\n    AND (LC_COConcept.OutDate IS NULL OR LC_COConcept.OutDate > '2021-12-31');",
    "SELECT AStockIndustryDB.LC_COConcept.ConceptCode, constantdb.secumain.SecuAbbr\nFROM AStockIndustryDB.LC_COConcept\nJOIN constantdb.secumain ON AStockIndustryDB.LC_COConcept.InnerCode = constantdb.secumain.InnerCode\nWHERE AStockIndustryDB.LC_COConcept.InDate BETWEEN '2020-01-01' AND '2020-12-31'\nAND AStockIndustryDB.LC_COConcept.IndiState = 1;",
    "SELECT COUNT(*) AS NumberOfSubConcepts\nFROM AStockIndustryDB.LC_ExgIndustry;",
    "SELECT COUNT(*) AS NumberOfChanges, GROUP_CONCAT(DISTINCT CompanyCode) AS CompanyCodes\nFROM AStockIndustryDB.LC_ExgIndChange\nWHERE YEAR(InfoPublDate) = 2021;",
    "SELECT COUNT(DISTINCT c.CompanyCode), ei.ThirdIndustryName\nFROM AStockIndustryDB.LC_COConcept c\nJOIN AStockIndustryDB.LC_ExgIndustry ei ON c.CompanyCode = ei.CompanyCode\nJOIN AStockIndustryDB.LC_ConceptList cl ON c.ConceptCode = cl.ConceptCode\nWHERE YEAR(c.InDate) = 2021\nAND ei.Standard = 38\nAND ei.InsertTime >= '2021-01-01'\nAND ei.InsertTime < '2022-01-01'\nGROUP BY ei.ThirdIndustryName;",
    "SELECT COUNT(*) AS DisclosureCount\nFROM AStockEventsDB.LC_Warrant\nWHERE CompanyCode = '002531'; -- 假设天顺风能的公司代码为002531",
    "SELECT COUNT(*) AS TotalDisclosures,\n       COUNT(CASE WHEN YEAR(InfoPublDate) = 2021 THEN 1 END) AS DisclosuresIn2021\nFROM AStockEventsDB.LC_Credit;",
    "SELECT COUNT(*) AS TotalReveals, \n       SUM(CASE WHEN YEAR(InfoPublDate) = 2021 THEN 1 ELSE 0 END) AS Reveals2021, \n       SUM(CASE WHEN YEAR(InfoPublDate) = 2020 THEN 1 ELSE 0 END) AS Reveals2020\nFROM AStockEventsDB.LC_Warrant\nWHERE CompanyCode = '天顺风能公司代码' AND \n      AnnouncementType = '重大资产重组公告类型代码';",
    "SELECT ThirdIndustryName \nFROM AStockIndustryDB.LC_ExgIndustry \nWHERE CompanyCode = (SELECT CompanyCode FROM constantdb.secumain WHERE CompanyName = '天顺风能');",
    "SELECT COUNT(*) AS TotalStocks\nFROM AStockIndustryDB.LC_ExgIndustry AS EI\nINNER JOIN AStockIndustryDB.LC_IndFinIndicators AS IFI ON EI.ThirdIndustryCode = IFI.IndustryCode\nWHERE EI.InfoPublDate BETWEEN '2021-01-01' AND '2021-12-31'\nAND IFI.Standard = '2021版';",
    "SELECT MAX(IndOperatingRevenue) AS MaxIndustryRevenue\nFROM AStockIndustryDB.LC_IndFinIndicators\nWHERE InfoPublDate LIKE '2021-08%'\nAND Standard IN (SELECT DM FROM AStockIndustryDB.CT_SystemConst WHERE LB = 1081 AND DM IN (24, 41))\nAND SectorCode = 5;",
    "SELECT COUNT(*) AS TotalNewIssues FROM AStockFinanceDB.LC_AShareSeasonedNewIssue WHERE StockType = '首钢股份';\nSELECT COUNT(*) AS TotalPlacementIssues FROM AStockFinanceDB.LC_ASharePlacement WHERE StockType = '首钢股份';",
    "SELECT\n    CompanyName,\n    SUM(ExpectedProceeds) AS TotalExpectedProceeds\nFROM\n    AStockFinanceDB.LC_AShareSeasonedNewIssue\nGROUP BY\n    CompanyName\nORDER BY\n    TotalExpectedProceeds DESC\nLIMIT 10;",
    "SELECT InnerCode, PlaCost AS IssueCostTotal, PlaPrice AS IssuePricePerShare\nFROM AStockFinanceDB.LC_ASharePlacement\nORDER BY PlaCost DESC\nLIMIT 1;",
    "SELECT \n    ROUND(SUM(TotalRDInput), 2) AS TotalRDInput,\n    SUM(RDStaffNum) AS RDStaffNum\nFROM \n    AStockFinanceDB.LC_IntAssetsDetail\nWHERE \n    CompanyCode = '新天绿能' AND\n    InfoPublDate LIKE '2020%' AND\n    IfMerged = 1 AND\n    IfAdjusted = 1;",
    "SELECT \n    ExpensedRDInput / TotalRDInput * 100 AS ExpensedRDRatio,\n    CapitalizedRDInput / TotalRDInput * 100 AS CapitalizedRDRatio\nFROM \n    AStockBasicInfoDB.LC_IntAssetsDetail\nWHERE \n    IfMerged = 1 AND IfAdjusted = 1;",
    "SELECT\n  AStockFinanceDB.LC_IntAssetsDetail.CompanyCode,\n  (SELECT SecuMain.SecuAbbr FROM SecuMain WHERE SecuMain.CompanyCode = AStockFinanceDB.LC_IntAssetsDetail.CompanyCode) AS CompanyAbbreviation,\n  AStockFinanceDB.LC_IntAssetsDetail.TotalRDInput\nFROM\n  AStockFinanceDB.LC_IntAssetsDetail\nWHERE\n  AStockFinanceDB.LC_IntAssetsDetail.EndDate = (SELECT MAX(EndDate) FROM AStockFinanceDB.LC_IntAssetsDetail)\nORDER BY\n  AStockFinanceDB.LC_IntAssetsDetail.TotalRDInput DESC\nLIMIT 3;",
    "SELECT \n    CompanyCode,\n    Project,\n    MainOperIncome,\n    CAST(MainOperIncome AS DECIMAL(10, 2)) AS MainOperIncomeFormatted,\n    MainOperCost,\n    MainOperProfit,\n    CAST(MainOperProfit AS DECIMAL(10, 2)) AS MainOperProfitFormatted\nFROM \n    AStockBasicInfoDB.LC_MainOperIncome\nWHERE \n    CompanyCode = '000958'\n    AND EndDate = '2021-12-31'\n    AND DateType IN (9, 30) -- Assuming 9 for annual and 30 for cumulative\n    AND IfMerged = 1 -- Assuming we need the merged data\n    AND IfAdjusted = 1 -- Assuming we need the adjusted data\n    AND Classification = 20 -- Assuming we need product-wise classification\n    AND Project <> '其他业务' -- Excluding other business\n    AND RegionAndBusiness IS NOT NULL -- Assuming we need data with region and business nature\nORDER BY \n    MainOperIncome DESC\nLIMIT 10;",
    "SELECT \n    CompanyCode,\n    Project,\n    MainOperIncome,\n    MainOperIncomeFormerYear,\n    MainOperIncome - MainOperIncomeFormerYear AS DecreaseAmount\nFROM \n    AStockFinanceDB.LC_MainOperIncome\nWHERE \n    DateType = 9 AND -- 9-年度\n    EndDate BETWEEN '2020-12-31' AND '2021-12-31'\n    AND MainOperIncome < MainOperIncomeFormerYear",
    "SELECT InfoPublDate\nFROM AStockFinanceDB.LC_OperatingStatus\nWHERE CompanyCode = '000958' AND EndDate = '2021-12-31';",
    "SELECT hshare_code, chinese_name, english_name \nFROM bank_info \nWHERE bank_name = '中国工商银行';",
    "SELECT Chairman, Eail FROM HKStockDB.HK_StockArchives;",
    "SELECT \n    HK_StockArchives.ChiName AS CompanyName,\n    HK_EmployeeChange.QuaBeforeChange AS EmployeesBefore,\n    HK_EmployeeChange.QuaAfterChange AS EmployeesAfter\nFROM \n    HKStockDB.HK_StockArchives\nJOIN \n    HKStockDB.HK_EmployeeChange ON HK_StockArchives.InnerCode = HK_EmployeeChange.InnerCode\nWHERE \n    HK_EmployeeChange.EffectiveDate = '2020-12-31'\nAND \n    HK_EmployeeChange.IfEffected = 1;",
    "SELECT ROUND(MAX(HighPrice), 2) AS HighestPrice\nFROM AStockMarketQuotesDB.QT_StockPerformance\nWHERE TradingDay >= '2020-05-24' AND TradingDay <= '2020-06-24';",
    "SELECT MIN(LowPriceRY) AS LowestPriceInYear\nFROM AStockMarketQuotesDB.QT_StockPerformance\nWHERE TradingDay >= DATE_SUB('2020-04-24', INTERVAL 1 YEAR)\nAND Ifsuspend = 0;",
    "SELECT \n    MAX(HighPrice) AS HighestPriceLastMonth,\n    MIN(LowPrice) AS LowestPriceLastYear,\n    (MAX(HighPrice) - MIN(LowPrice)) AS Difference\nFROM \n    AStockMarketQuotesDB.QT_StockPerformance\nWHERE \n    TradingDay BETWEEN DATE_SUB('2020-07-24', INTERVAL 1 MONTH) AND '2020-07-24'\n    AND TradingDay BETWEEN DATE_SUB('2020-07-24', INTERVAL 1 YEAR) AND '2020-07-24'",
    "SELECT InnerCode, ClosePrice\nFROM HKStockDB.CS_HKStockPerformance\nWHERE TradingDay = '2020-10-27'\nORDER BY ClosePrice DESC\nLIMIT 2, 1;",
    "SELECT * FROM HKStockDB.CS_HKStockPerformance\nORDER BY TurnoverVolume DESC\nLIMIT 2, 1;",
    "SELECT * FROM HKStockDB.QT_StockPerformance ORDER BY TurnoverRate DESC LIMIT 2, 1;",
    "SELECT `InnerCode`, `ClosePrice`\nFROM `HKStockDB`.`CS_HKStockPerformance`\nWHERE `TradingDay` = '2019-09-02'\nORDER BY `ClosePrice` DESC\nLIMIT 1;",
    "SELECT * FROM HKStockDB.CS_HKStockPerformance\nWHERE TradingDay = '2019-09-02'\nORDER BY TurnoverVolume DESC\nLIMIT 1;",
    "SELECT * FROM HKStockDB.HK_StockPerformance WHERE date = '2019-09-02' ORDER BY turnover_rate DESC LIMIT 1;",
    "SELECT CompanyCode, ChiName, EngName\nFROM AStockBasicInfoDB.LC_NameChange\nWHERE ChangeDate BETWEEN '2020-01-01' AND '2020-12-31'\nAND IfPassed = 1;",
    "SELECT CompanyCode FROM AStockBasicInfoDB.LC_NameChange;",
    "SELECT CompanyCode FROM AStockBasicInfoDB.LC_NameChange;",
    "SELECT CompanyCode, TotalAssets AS HighestTotalAssets\nFROM AStockFinanceDB.LC_BalanceSheetAll\nWHERE EndDate = '2021-12-31'\nORDER BY TotalAssets DESC\nLIMIT 1;",
    "SELECT LC_StockArchives.AStockAbbr, LC_CashFlowStatementAll.NetOperateCashFlow\nFROM AStockBasicInfoDB.LC_StockArchives\nJOIN AStockFinanceDB.LC_CashFlowStatementAll ON LC_StockArchives.CompanyCode = LC_CashFlowStatementAll.CompanyCode\nWHERE LC_CashFlowStatementAll.EndDate = '2021-12-31'\nORDER BY LC_CashFlowStatementAll.NetOperateCashFlow DESC\nLIMIT 1;",
    "SELECT A.CompanyCode, B.NetProfit\nFROM LC_BalanceSheetAll AS A\nJOIN LC_IncomeStatementAll AS B ON A.CompanyCode = B.CompanyCode\nWHERE A.EndDate = '2021-12-31'\nAND A.InfoSourceCode = 110101\nAND B.EndDate = '2021-12-31'\nAND B.InfoSourceCode = 110101\nAND A.IfMerged = 1\nAND B.IfMerged = 1\nAND A.AccountingStandards = 1\nAND B.AccountingStandards = 1\nORDER BY A.TotalAssets DESC, B.NetProfit DESC\nLIMIT 2;",
    "SELECT TOP 10 SM.ChiName, SP.IncreaseRate\nFROM HKStockDB.HK_StockPerformance SP\nJOIN ConstantDB.SecuMain SM ON SP.InnerCode = SM.InnerCode\nWHERE SP.Date >= '2020-04-01' AND SP.Date <= '2020-04-30'\nORDER BY SP.IncreaseRate DESC",
    "SELECT InnerCode, ChangePCTTM\nFROM HKStockDB.CS_HKStockPerformance\nWHERE TradingDay = '2020-05-31'\nORDER BY ChangePCTTM DESC\nLIMIT 10;",
    "SELECT TOP 1 InnerCode, ChangePCTTM\nFROM HKStockDB.CS_HKStockPerformance\nWHERE TradingDay >= '2020-04-01' AND TradingDay < '2020-05-01'\nGROUP BY InnerCode\nHAVING InnerCode IN (\n    SELECT InnerCode\n    FROM HKStockDB.CS_HKStockPerformance\n    WHERE TradingDay >= '2020-03-01' AND TradingDay < '2020-04-01'\n    ORDER BY ChangePCTTM DESC\n    LIMIT 10\n)\nORDER BY ChangePCTTM ASC;",
    "SELECT ContactEmail FROM AStockBasicInfoDB.LC_StockArchives WHERE CompanyCode = (SELECT CompanyCode FROM SecuMain WHERE CompanyName = '东航物流');",
    "SELECT `LC_ActualController`.`ControllerName` AS `实际控制人`\nFROM `AStockShareholderDB`.`LC_ActualController`\nWHERE `LC_ActualController`.`CompanyCode` = (\n    SELECT `LC_StockArchives`.`CompanyCode`\n    FROM `AStockBasicInfoDB`.`LC_StockArchives`\n    WHERE `LC_StockArchives`.`ChiName` = '东航物流'\n)\nLIMIT 1;",
    "SELECT COUNT(DISTINCT LC_StockArchives.CompanyCode) AS NumberOfCompanies\nFROM AStockShareholderDB.LC_ActualController\nJOIN AStockBasicInfoDB.LC_StockArchives ON AStockShareholderDB.LC_ActualController.CompanyCode = AStockBasicInfoDB.LC_StockArchives.CompanyCode\nWHERE AStockShareholderDB.LC_ActualController.ControllerName = '东航物流的实控人名称';",
    "SELECT COUNT(*) AS TotalLogisticsCompanies\nFROM AStockIndustryDB.LC_ExgIndustry AS Industry\nWHERE Industry.Industry LIKE '%物流%'",
    "SELECT * FROM AStockBasicInfoDB.LC_NameChange WHERE ChiName = '航锦科技股份有限公司';",
    "SELECT MAX(BuybackMoney) AS MaxBuybackAmount\nFROM AStockShareholderDB.LC_Buyback;",
    "SELECT TOP 10 CompanyCode, PCTAfterRece AS '持股比例'\nFROM AStockShareholderDB.LC_ShareTransfer\nWHERE InfoPublDate >= '2021-01-01' AND InfoPublDate <= '2021-12-31'\nORDER BY PCTAfterRece DESC;",
    "SELECT SUM(EmployeeSum) AS TotalTechAndProductionStaff\nFROM AStockOperationsDB.LC_Staff\nWHERE TypeName IN ('生产人员', '技术人员');",
    "SELECT COUNT(*) AS CompanyCount\nFROM AStockIndustryDB.LC_ExgIndustry\nWHERE Standard = 9 AND Industry = '交通运输';",
    "SELECT COUNT(DISTINCT CompanyCode) \nFROM AStockIndustryDB.LC_ExgIndChange \nWHERE YEAR(InfoPublDate) = 2020 AND IfExecuted = 1;",
    "SELECT A.CompanyCode, A.FirstIndustryName, A.SecondIndustryName, A.ThirdIndustryName, A.FourthIndustryName, B.CancelDate\nFROM AStockIndustryDB.LC_ExgIndustry A\nJOIN AStockIndustryDB.LC_ExgIndChange B ON A.CompanyCode = B.CompanyCode\nWHERE A.InfoPublDate BETWEEN '2020-01-01' AND '2020-12-31'\nAND B.CancelDate BETWEEN '2021-01-01' AND '2021-12-31'\nAND A.IfPerformed = 1\nAND B.IfExecuted = 1;",
    "SELECT HighPrice, LowPrice \nFROM AStockMarketQuotesDB.QT_DailyQuote \nWHERE TradingDay = '2021-08-04';",
    "SELECT COUNT(*) AS LimitUpCount\nFROM AStockMarketQuotesDB.QT_DailyQuote\nWHERE InnerCode = (SELECT InnerCode FROM constantdb.secumain WHERE SecuMain.TradingDay = QT_DailyQuote.TradingDay)\nAND ClosePrice > PrevClosePrice;",
    "SELECT AStockIndustryDB.LC_ConceptList.ClassName\nFROM AStockIndustryDB.LC_COConcept\nJOIN AStockIndustryDB.LC_ConceptList ON AStockIndustryDB.LC_COConcept.ConceptCode = AStockIndustryDB.LC_ConceptList.ConceptCode\nWHERE AStockIndustryDB.LC_COConcept.InnerCode = '指定的股票内部编码';",
    "SELECT SUM(TurnoverValue) AS TotalMarketValue\nFROM AStockMarketQuotesDB.QT_DailyQuote\nWHERE TradingDay = '2021-08-04'\nAND InnerCode IN (\n    SELECT InnerCode\n    FROM constantdb.secumain\n    WHERE IndustryClassification = '二级行业代码'  -- 请替换'二级行业代码'为实际查询的二级行业代码\n);",
    "SELECT RegAddr FROM AStockBasicInfoDB.LC_StockArchives;",
    "SELECT LC_MainSHListNew.SHList, LC_MainSHListNew.HoldSum, LC_MainSHListNew.PCTOfTotalShares\nFROM AStockShareholderDB.LC_MainSHListNew\nWHERE LC_MainSHListNew.InfoTypeCode = 1\nORDER BY LC_MainSHListNew.SHNo ASC\nLIMIT 10;",
    "SELECT COUNT(*) AS FundManagementCompaniesCount\nFROM AStockShareholderDB.LC_MainSHListNew\nWHERE SHType = '基金管理公司';",
    "SELECT COUNT(DISTINCT LC_StockArchives.CompanyCode) AS CompanyCount,\n       LC_StockArchives.CompanyCode,\n       COUNT(DISTINCT MF_FundArchives.InnerCode) AS FundCount\nFROM AStockBasicInfoDB.LC_StockArchives\nJOIN PublicFundDB.MF_FundArchives ON LC_StockArchives.CompanyCode = MF_FundArchives.InvestAdvisorCode\nWHERE MF_FundArchives.EstablishmentDate >= '2019-01-01' AND MF_FundArchives.EstablishmentDate <= '2019-12-31'\nGROUP BY LC_StockArchives.CompanyCode;",
    "SELECT EstablishmentDate FROM AStockBasicInfoDB.LC_StockArchives WHERE CompanyCode = (SELECT CompanyCode FROM SecuMain WHERE ChiName = '唐山港集团股份有限公司');",
    "SELECT COUNT(*) AS NumberOfCompanies Listed\nFROM AStockBasicInfoDB.LC_StockArchives;",
    "SELECT COUNT(*) \nFROM AStockBasicInfoDB.LC_StockArchives\nWHERE RegArea IN (\n    SELECT AreaInnerCode \n    FROM LC_AreaCode \n    WHERE AreaName = '北京市'\n);",
    "SELECT * \nFROM AStockBasicInfoDB.LC_StockArchives \nWHERE RegArea = '海淀' AND OfficeAddr LIKE '%海淀%';",
    "SELECT SHList AS ShareholderName, SHType AS ShareholderType, InfoPublDate AS ReportPublishDate\nFROM AStockBasicInfoDB.LC_MainSHListNew\nWHERE CompanyCode = (SELECT CompanyCode FROM AStockBasicInfoDB.SecuMain WHERE SecuAbbr = '山东药玻')\n  AND InfoTypeCode = 1\n  AND EndDate = '2019-12-31'\nORDER BY SHNo ASC\nLIMIT 1;",
    "SELECT\n    LC_SHNumber.SHNum AS TotalShareholders\nFROM\n    AStockShareholderDB.LC_SHNumber\nWHERE\n    YEAR(LC_SHNumber.EndDate) = 2019;",
    "SELECT `FloatShare` AS 流通股本\nFROM `上市公司股东与股本/公司治理.AStockShareholderDB.LC_ShareStru`\nLIMIT 1;",
    "SELECT MAX(InvolvedSum) AS MaxInvolvedSum, TranDate\nFROM AStockShareholderDB.LC_ShareTransfer\nWHERE TranDate BETWEEN '2019-01-01' AND '2019-12-31'\nAND IfSPBlockTrade = 0\nGROUP BY TranDate\nORDER BY MaxInvolvedSum DESC\nLIMIT 1;",
    "SELECT SecuCode\nFROM AStockBasicInfoDB.SecuMain\nWHERE ChiName = '中南出版传媒集团股份有限公司';",
    "SELECT AdvancePayment\nFROM AStockFinanceDB.LC_BalanceSheetAll\nWHERE CompanyCode = '中南出版传媒集团股份有限公司的证券代码' -- 需要替换为实际的公司代码\nAND EndDate BETWEEN '2019-01-01' AND '2019-03-31' -- 2019年一季度\nAND IfMerged = '2' -- 母公司报表\nAND IfAdjusted = '6' -- 一季末调整",
    "SELECT TotalOperatingRevenue, OperatingRevenue, NetInterestIncome, InterestIncome, InterestExpense, NetCommissionIncome, CommissionIncome, CommissionExpense, NetProxySecuIncome, NetSubIssueSecuIncome, NetTrustIncome, PremiumsEarned, PremiumsIncome, ReinsuranceIncome, Reinsurance, UnearnedPremiumReserve, OtherOperatingRevenue, SpecialItemsOR, AdjustmentItemsOR, TotalOperatingCost, OperatingPayout, RefundedPremiums, CompensationExpense, AmortizationExpense, PremiumReserve, AmortizationPremiumReserve, PolicyDividendPayout, ReinsuranceCost, OperatingAndAdminExpense, AmortizationReinsuranceCost, InsuranceCommissionExpense, OtherOperatingCost, OperatingCost, OperatingTaxSurcharges, OperatingExpense, AdministrationExpense, FinancialExpense, AssetImpairmentLoss, SpecialItemsTOC, AdjustmentItemsTOC, OtherNetRevenue, FairValueChangeIncome, InvestIncome, InvestIncomeAssociates, ExchangeIncome, OtherItemsEffectingOP, AdjustedItemsEffectingOP, OperatingProfit, NonoperatingIncome, NonoperatingExpense, NonCurrentAssetssDealLoss, OtherItemsEffectingTP, AdjustedItemsEffectingTP, TotalProfit, IncomeTaxCost, UncertainedInvestmentLosses, OtherItemsEffectingNP, AdjustedItemsEffectingNP, NetProfit, NPParentCompanyOwners, MinorityProfit, OtherItemsEffectingNPP, AdjustedItemsEffectingNPP, OtherCompositeIncome, AdjustedItemsEffectingCI, TotalCompositeIncome, CIParentCompanyOwners, CIMinorityOwners, AdjustedItemsEffectingPCI, BasicEPS, DilutedEPS, SpecialFieldRemark, UpdateTime, JSID, IfComplete, OCIParentCompanyOwners, OCINotInIncomeStatement, OCIReMearsure, OCIEquityNotInIS, OCIInIncomeStatement, OCIEquityInIS, OCIFairValue, OCIToMaturityFA, OCICFLoss, OCIForeignCurrencyFSA, OCIOthers, OCIMinorityOwners, OtherRevenue, AssetDealIncome, OperSustCateg, OperSustNetP, DisconOperNetP, OwnershipCateg, PreInsurRSRV, NetClaimIncurred, NetPremiumReserve, AmortisedcostIncome, InfoSourceCode, InsertTime, SalesRevenue, OtherOperatingIncome, GuaranteeIncome, BrokerageIncome, InvestBankIncome, AssetManageIncome, FundManageIncome, InvestConsultIncome, RiskManageIncome, InvestManageIncome, OtherAgencyIncome, BrokerageExpense, InvestBankExpense, AssetManageExpense, FundManageExpense, InvestConsultExpense, RiskManageExpense, InvestManageExpense, OtherAgencyExpense, NetFundMgtIncome, ExtractFutureRisk, WithdrawGuaranteeReser, GuarantCompRSRV, SalesCost, OtherOperationalCost, TotalAdminExpense, ExplorationCost, CreditImpairmentP, AssetImpairmentLossP, NPCParentCompanyOwners, NPOtherEqinstruments, OtherItemsEffectingCI, CICParentCompanyOwners, CIOtherEqinstruments, OthDebtInvesChange, InterestIncomeFin, CreditImpairmentL, NetOpenHedgeIncome, OthEquFVChange, FinAssetROtherCI, OtherDebtInvestCIP, RAndD, InterestFinExp, CorporateCRChange\nFROM AStockFinanceDB.LC_IncomeStatementAll\nWHERE CompanyCode = '中南出版传媒集团股份有限公司' AND IfMerged = 2 AND EndDate BETWEEN '2019-01-01' AND '2019-03-31';",
    "SELECT OperatingCashFlow FROM AStockFinanceDB.LC_IncomeStatementAll WHERE CompanyCode = (SELECT CompanyCode FROM constantdb.SecuMain WHERE ShortName = '中南出版传媒集团股份有限公司') AND EndDate = '2019-03-31';",
    "SELECT AStockMarketQuotesDB.QT_DailyQuote.InnerCode, \n       AStockMarketQuotesDB.SecuMain.SecuAbbr \nFROM AStockMarketQuotesDB.QT_DailyQuote \nJOIN AStockMarketQuotesDB.SecuMain \nON AStockMarketQuotesDB.QT_DailyQuote.InnerCode = AStockMarketQuotesDB.SecuMain.InnerCode \nWHERE AStockMarketQuotesDB.QT_DailyQuote.InnerCode = '000932';",
    "SELECT \n    a.GeneralManager AS \"总经理薪资\",\n    a.SecretaryBD AS \"董事会秘书薪资\",\n    a.LegalConsultant AS \"法律顾问薪资\"\nFROM \n    AStockBasicInfoDB.LC_StockArchives a\nWHERE \n    a.EstablishmentDate LIKE '2020%'\nORDER BY \n    a.GeneralManager DESC, \n    a.SecretaryBD DESC, \n    a.LegalConsultant DESC\nLIMIT 3;",
    "SELECT\n    AStockEventsDB.LC_Regroup.CompanyCode,\n    AStockEventsDB.LC_Regroup.EventContent,\n    AStockEventsDB.LC_Regroup.EventProcedure,\n    AStockEventsDB.LC_Regroup.NewestAdvance,\n    AStockEventsDB.LC_Regroup.IfEnded\nFROM\n    AStockEventsDB.LC_Regroup\nWHERE\n    AStockEventsDB.LC_Regroup.CompanyCode = '000932' AND\n    AStockEventsDB.LC_Regroup.InfoTypeCode IN (4, 5, 6, 81) AND\n    AStockEventsDB.LC_Regroup.EventProcedure IN (1004, 1013, 1022) AND\n    AStockEventsDB.LC_Regroup.IfEnded = 1\nLIMIT 10;",
    "SELECT ChiName FROM AStockBasicInfoDB.LC_NameChange WHERE ChiNameAbbr = 'RXW';",
    "SELECT SUM(InvolvedSum) AS TotalSharesOffered\nFROM AStockShareholderDB.LC_ShareTransfer\nWHERE TranMode = '1' AND IfSuspended = '0';",
    "SELECT TotalRDInput\nFROM AStockFinanceDB.LC_IntAssetsDetail\nWHERE InfoPublDate BETWEEN '2021-01-01' AND '2021-12-31'",
    "SELECT SecretaryBD FROM AStockBasicInfoDB.LC_StockArchives WHERE CompanyCode = (SELECT CompanyCode FROM SecuMain WHERE ChiName = 'Titan Wind Energy (Suzhou) Co.,Ltd.');",
    "SELECT MAX(InvolvedSum) AS MaxRepurchaseAmount\nFROM AStockShareholderDB.LC_ShareFP\nWHERE TypeSelect = 5 AND InfoPublDate LIKE '2020-%';",
    "SELECT `ValueCeiling` \nFROM `AStockFinanceDB`.`LC_Buyback` \nWHERE `FirstPublDate` LIKE '2020%' \nORDER BY `ValueCeiling` DESC \nLIMIT 1;",
    "SELECT COUNT(DISTINCT CompanyCode) AS NumberOfCompanies\nFROM AStockEventsDB.LC_Warrant\nWHERE Year(InitialInfoPublDate) = 2019\nAND ActionDesc LIKE '%东兴证券%'\nAND EventProcedure IN (1001, 1004, 1007, 1016, 1019, 1025, 1028, 1041, 1053, 3099)\nAND IfEnded = 0;",
    "SELECT MAX(LatestGuaranteeSum) AS MaxGuaranteeAmount\nFROM AStockEventsDB.LC_Warrant;",
    "SELECT COUNT(*) AS DisputeCount\nFROM AStockEventsDB.LC_SuitArbitration\nWHERE EventProcedure IN ('1001', '1004', '1007', '1016', '1019', '1025', '1028', '1041', '1053', '3099')\nAND EventContent LIKE '%合同纠纷%'",
    "SELECT COUNT(*) AS TotalFundsManaged\nFROM PublicFundDB.MF_FundArchives\nWHERE Manager = '李一硕';",
    "SELECT MAX(FoundedSize) AS LargestFundSize\nFROM PublicFundDB.MF_FundArchives;",
    "SELECT MF_FundArchives.Manager, MF_InvestAdvisorOutline.LegalRepr\nFROM PublicFundDB.MF_FundArchives\nJOIN PublicFundDB.MF_InvestAdvisorOutline ON MF_FundArchives.InvestAdvisorCode = MF_InvestAdvisorOutline.InvestAdvisorCode;",
    "SELECT PartyName, PenalOrg, PenalType, AmountInvolved, PenalStatement, InsertTime \nFROM CreditDB.LC_ViolatiParty \nWHERE DATE(InsertTime) = '2019-12-12' AND PartyType = '证券公司';",
    "SELECT COUNT(DISTINCT CompanyCode) AS NumberOfCompanies\nFROM AStockShareholderDB.LC_ShareStru\nWHERE PartyName = '特定股东名称';",
    "SELECT CompanyCode, SUM(LatestLoanSum) AS TotalLoanAmount\nFROM AStockEventsDB.LC_Credit\nGROUP BY CompanyCode\nORDER BY TotalLoanAmount DESC\nLIMIT 1;",
    "SELECT SuspendDate FROM AStockMarketQuotesDB.LC_SuspendResumption ORDER BY SuspendDate DESC LIMIT 1;",
    "SELECT InnerCode, MAX(ClosePrice) AS HighestClosePrice\nFROM AStockMarketQuotesDB.QT_DailyQuote\nWHERE TradingDay = CURRENT_DATE\nGROUP BY InnerCode\nORDER BY HighestClosePrice DESC\nLIMIT 1;",
    "SELECT IfHighestHPriceRW\nFROM AStockMarketQuotesDB.CS_StockPatterns\nWHERE TradingDay = (SELECT MAX(TradingDay) FROM AStockMarketQuotesDB.CS_StockPatterns)",
    "SELECT HighAdjustedPriceDate \nFROM AStockMarketQuotesDB.QT_StockPerformance\nWHERE HighAdjustedPrice = (SELECT MAX(HighAdjustedPrice) FROM AStockMarketQuotesDB.QT_StockPerformance)",
    "SELECT COUNT(*)\nFROM AStockMarketQuotesDB.QT_StockPerformance\nWHERE ChangePCT > 10\nAND TradingDay = CURRENT_DATE;",
    "SELECT InnerCode\nFROM AStockMarketQuotesDB.QT_DailyQuote AS quote\nWHERE EXISTS (\n    SELECT 1\n    FROM AStockMarketQuotesDB.QT_DailyQuote AS next_day_quote\n    WHERE quote.InnerCode = next_day_quote.InnerCode\n    AND next_day_quote.TradingDay = DATE_ADD(quote.TradingDay, INTERVAL 1 DAY)\n    AND next_day_quote.ClosePrice > quote.ClosePrice\n)\nAND quote.ClosePrice > quote.PrevClosePrice;",
    "SELECT OpenPrice \nFROM AStockMarketQuotesDB.QT_DailyQuote \nWHERE TradingDay = '2021-09-23';",
    "SELECT \n    AStockMarketQuotesDB.QT_DailyQuote.InnerCode,\n    (SELECT FOREIGNShareholdingRatio FROM constantdb.secumain WHERE secumain.InnerCode = AStockMarketQuotesDB.QT_DailyQuote.InnerCode) AS FOREIGNShareholdingRatio\nFROM \n    AStockMarketQuotesDB.QT_DailyQuote\nWHERE \n    TradingDay = CURRENT_DATE();",
    "SELECT SUM(IssueVol) AS Total_Issue_Vol\nFROM AStockFinanceDB.LC_AShareSeasonedNewIssue\nWHERE AdvanceDate BETWEEN '2020-01-01' AND '2021-12-31'\nUNION ALL\nSELECT SUM(ActualPlaVol) AS Total_Issue_Vol\nFROM AStockFinanceDB.LC_ASharePlacement\nWHERE PlaYear = '2020' OR PlaYear = '2021';",
    "SELECT COUNT(*) AS CompanyCount\nFROM AStockEventsDB.LC_SMAttendInfo\nWHERE MeetingType = 1\nAND Year = 2020\nAND TestmonyLawOffice = '北京国枫律师事务所';",
    "SELECT AStockShareholderDB.LC_SMAttendInfo.CompanyCode\nFROM AStockShareholderDB.LC_SMAttendInfo\nJOIN AStockShareholderDB.SecuMain ON AStockShareholderDB.LC_SMAttendInfo.CompanyCode = AStockShareholderDB.SecuMain.CompanyCode\nWHERE EXISTS (\n    SELECT 1\n    FROM AStockShareholderDB.LC_ShareholderReduction\n    WHERE AStockShareholderDB.LC_ShareholderReduction.CompanyCode = AStockShareholderDB.LC_SMAttendInfo.CompanyCode\n    AND AStockShareholderDB.LC_ShareholderReduction.Year = AStockShareholderDB.LC_SMAttendInfo.Year\n);",
    "SELECT\n    AStockSecuMain.CompanyName,\n    ROUND((MAX(AStockMarketQuotesDB.ClosePrice) - MIN(AStockMarketQuotesDB.ClosePrice)) / MIN(AStockMarketQuotesDB.ClosePrice), 4) AS GrowthRate\nFROM\n    AStockMarketQuotesDB\nINNER JOIN\n    AStockSecuMain ON AStockMarketQuotesDB.InnerCode = AStockSecuMain.InnerCode\nWHERE\n    AStockMarketQuotesDB.TradingDay BETWEEN '2020-01-01' AND '2020-12-31'\nGROUP BY\n    AStockSecuMain.CompanyName\nORDER BY\n    GrowthRate DESC\nLIMIT 1;",
    "SELECT InnerCode, MainNetBuyValue\nFROM AStockMarketQuotesDB.CS_StockCapFlowIndex\nWHERE TradingDay = '2019-01-04'\nORDER BY MainNetBuyValue DESC\nLIMIT 1;",
    "SELECT ROUND(AVG(TurnoverValue), 2) AS AverageTurnoverValue\nFROM AStockMarketQuotesDB.QT_DailyQuote\nWHERE TradingDay BETWEEN CURDATE() - INTERVAL 5 DAY AND CURDATE();",
    "SELECT COUNT(*) AS NumberOfCompanies\nFROM AStockMarketQuotesDB.CS_StockCapFlowIndex AS SCFI\nJOIN AStockMarketQuotesDB.SecuMain AS SM ON SCFI.InnerCode = SM.InnerCode\nWHERE SCFI.MainNetBuyValue > (\n    SELECT MainNetBuyValue\n    FROM AStockMarketQuotesDB.CS_StockCapFlowIndex\n    WHERE InnerCode = (\n        SELECT InnerCode\n        FROM AStockMarketQuotesDB.SecuMain\n        WHERE ChiName = '该公司名称'\n    )\n)",
    "SELECT CompanyCode FROM HKStockDB.HK_StockArchives WHERE ChiName = '波司登';",
    "SELECT RegCapital, RegCapitalCurrency FROM HKStockDB.HK_StockArchives WHERE ChiName = '波司登'",
    "SELECT \n    EffectiveDate,\n    ABS(QuaAfterChange - QuaBeforeChange) AS ChangeAmount\nFROM \n    HKStockDB.HK_EmployeeChange\nORDER BY \n    ChangeAmount DESC\nLIMIT 1;",
    "SELECT GeneralManager FROM PublicFundDB.MF_InvestAdvisorOutline WHERE InvestAdvisorName = '天弘沪深300ETF联接A基金';",
    "SELECT COUNT(*) as TotalFundsManaged\nFROM PublicFundDB.MF_FundArchives AS fa\nJOIN PublicFundDB.MF_InvestAdvisorOutline ASiao ON fa.InvestAdvisorCode = aiao.InvestAdvisorCode;",
    "SELECT\n    fa.SecurityCode,\n    fa.Manager,\n    MAX(md.DividendRatioBeforeTax) AS MaxDividendBeforeTax\nFROM\n    PublicFundDB.MF_FundArchives fa\nJOIN\n    PublicFundDB.MF_Dividend md ON fa.InnerCode = md.InnerCode\nWHERE\n    YEAR(md.ProfitDistDate) = 2020\nGROUP BY\n    fa.SecurityCode,\n    fa.Manager\nORDER BY\n    MaxDividendBeforeTax DESC\nLIMIT 1;",
    "SELECT EngName FROM USStockDB.US_CompanyInfo WHERE ChiName = 'JD.com, Inc.';",
    "SELECT EngNameAbbr FROM USStockDB.US_CompanyInfo WHERE EngName = 'JD.com, Inc.';",
    "SELECT MAX(ChangePCT) AS MaxDailyGrowth\nFROM USStockDB.US_DailyQuote\nWHERE TradingDay BETWEEN '2020-01-01' AND '2020-12-31';",
    "SELECT `ContactTel` FROM `AStockBasicInfoDB.LC_StockArchives`;",
    "SELECT EstablishmentDate FROM AStockBasicInfoDB.LC_StockArchives;",
    "SELECT AShareAbbr, AStockCode, BriefIntroText, EstablishmentDate\nFROM AStockBasicInfoDB.LC_StockArchives\nWHERE CompanyCode = (SELECT CompanyCode FROM SecuMain WHERE AStockCode = 'XXXX') AND XGRQ = '2020-09-18';",
    "SELECT COUNT(*) AS NumberOfCompanies\nFROM AStockBasicInfoDB.LC_StockArchives\nWHERE State = 'CN' AND EstablishmentDate BETWEEN '2020-01-01' AND '2020-12-31';",
    "SELECT AStockAbbr, MAX(ListedDate) AS LatestListedDate\nFROM AStockBasicInfoDB.LC_StockArchives\nWHERE ListedDate IS NOT NULL\nGROUP BY AStockAbbr\nORDER BY LatestListedDate DESC\nLIMIT 1;",
    "SELECT COUNT(*) \nFROM AStockBasicInfoDB.LC_StockArchives\nJOIN SecuMain ON AStockBasicInfoDB.LC_StockArchives.CompanyCode = SecuMain.CompanyCode\nWHERE DATE(SecuMain.ListingDate) = CURRENT_DATE AND SecuMain.EndPrice > SecuMain.StartPrice;",
    "SELECT RegZipCode FROM AStockBasicInfoDB.LC_StockArchives WHERE CompanyCode = '比特矿业的公司代码';",
    "SELECT (YEAR(CURRENT_DATE) - YEAR(EstablishmentDate)) AS ListedYears\nFROM AStockBasicInfoDB.LC_StockArchives;",
    "SELECT COUNT(*) AS TotalListedCompanies\nFROM AStockBasicInfoDB.LC_StockArchives;",
    "SELECT\n    SM.SecuCode,\n    SM.SecuAbbr,\n    SM.ListStatus\nFROM\n    AStockMarketQuotesDB.QT_SuspendResumption SR\nJOIN\n    AStockEventsDB.LC_Warrant W\nON\n    SR.CompanyCode = W.CompanyCode\nJOIN\n    constantdb.SecuMain SM\nON\n    SR.CompanyCode = SM.CompanyCode\nWHERE\n    SR.SuspendReason = '退市'\nAND\n    W.EventProcedure = '1001'\nLIMIT 10;",
    "SELECT MAX(ClosePrice) AS MaxClosePrice \nFROM AStockMarketQuotesDB.QT_DailyQuote \nWHERE TradingDay BETWEEN '2019-01-01' AND '2019-12-31';",
    "SELECT COUNT(DISTINCT AStockBasicInfoDB.LC_StockArchives.CompanyCode) AS CompaniesDelistedToday\nFROM AStockBasicInfoDB.LC_StockArchives\nJOIN AStockMarketQuotesDB.LC_SuspendResumption ON AStockBasicInfoDB.LC_StockArchives.CompanyCode = AStockMarketQuotesDB.LC_SuspendResumption.InnerCode\nWHERE AStockMarketQuotesDB.LC_SuspendResumption.SuspendReason LIKE '%退市%'\nAND AStockMarketQuotesDB.LC_SuspendResumption.SuspendDate = CURRENT_DATE;",
    "SELECT PublicFundDB.MF_Dividend.InnerCode, MAX(PublicFundDB.MF_Dividend.ActualRatioAfterTax) AS MaxDividendAfterTax\nFROM PublicFundDB.MF_Dividend\nWHERE PublicFundDB.MF_Dividend.InfoPublDate BETWEEN '2021-08-01' AND '2021-08-31'\n  AND PublicFundDB.MF_Dividend.IfDistributed = 1\nGROUP BY PublicFundDB.MF_Dividend.InnerCode\nORDER BY MaxDividendAfterTax DESC\nLIMIT 1;",
    "SELECT DividendImplementDate FROM PublicFundDB.MF_Dividend WHERE InnerCode = (SELECT InnerCode FROM constantdb.secumain WHERE TransCode = '基金转型统一编码') ORDER BY DividendImplementDate ASC LIMIT 1;",
    "SELECT InfoSource FROM PublicFundDB.MF_Dividend LIMIT 1;",
    "SELECT COUNT(*) \nFROM PublicFundDB.MF_FundArchives \nWHERE EstablishmentDate >= '2019-01-01' AND EstablishmentDate <= '2019-12-31' AND InvestAdvisorCode IN (\n    SELECT InvestAdvisorCode \n    FROM PublicFundDB.MF_InvestAdvisorOutline \n    WHERE CompanyName = '易方达基金管理有限公司'\n);",
    "SELECT `MF_FundSize`.`FundName`, `MF_FundSize`.`EstablishmentDate`, `MF_FundSize`.`FundScale`\nFROM `EfundDB`.`MF_FundSize`\nORDER BY `MF_FundSize`.`FundScale` DESC\nLIMIT 1;",
    "SELECT MAX(DividendRatioBeforeTax) AS LastDividendRatio\nFROM PublicFundDB.MF_Dividend\nWHERE YEAR(ProfitDistDate) = 2020;",
    "SELECT COUNT(*) AS FundCount\nFROM PublicFundDB.MF_FundArchives\nWHERE Manager LIKE '%南方基金管理股份有限公司%'\nAND EstablishmentDate BETWEEN '2019-01-01' AND '2019-12-31';",
    "SELECT `SecuCode`, MAX(`FoundedSize`) AS `MaxSize` \nFROM `NFundDB.MF_FundArchives`\nGROUP BY `SecuCode`\nORDER BY `MaxSize` DESC\nLIMIT 1;",
    "SELECT \n    MF_FundArchives.InnerCode,\n    MF_Dividend.DividendRatioBeforeTax\nFROM \n    MF_FundArchives\nJOIN \n    MF_Dividend ON MF_FundArchives.InnerCode = MF_Dividend.InnerCode\nWHERE \n    MF_FundArchives.InnerCode = '南方基金管理股份有限公司基金代码' -- 请替换为实际的基金代码\nORDER BY \n    MF_Dividend.EndDate DESC\nLIMIT 1;",
    "SELECT COUNT(*) AS IndexCount FROM IndexDB.LC_IndexBasicInfo WHERE PubOrgName = '中证指数有限公司';",
    "SELECT COUNT(DISTINCT LC_IndexComponent.SecuInnerCode) AS CompanyCount\nFROM IndexDB.LC_IndexBasicInfo\nJOIN IndexDB.LC_IndexComponent ON LC_IndexBasicInfo.IndexInnerCode = LC_IndexComponent.IndexInnerCode\nWHERE LC_IndexComponent.Flag = 1;",
    "SELECT COUNT(DISTINCT SecuInnerCode) AS NumberOfCompanies\nFROM IndexDB.LC_IndexComponent\nWHERE InDate BETWEEN '2020-01-01' AND '2020-12-31'",
    "SELECT LegalRepr FROM AStockBasicInfoDB.LC_StockArchives WHERE CompanyCode = (SELECT CompanyCode FROM SecuMain WHERE ChiName = '铜陵有色金属集团股份有限公司');",
    "SELECT EstablishmentDate FROM HKStockDB.HK_StockArchives WHERE ChiName = '铜陵有色金属集团股份有限公司';",
    "SELECT GeneralManager FROM AStockBasicInfoDB.LC_StockArchives WHERE CompanyCode = (SELECT CompanyCode FROM SecuMain WHERE ChiName = '铜陵有色金属集团股份有限公司');",
    "SELECT website_url FROM AStockEventsDB.LC_CompanyWebsite LIMIT 10;",
    "SELECT COUNT(*) AS NonPublicIssuanceCount\nFROM AStockFinanceDB.LC_AShareSeasonedNewIssue\nWHERE IssueType = 21 AND IfEffected = 1;",
    "SELECT IssueVol \nFROM AStockEventsDB.LC_AShareSeasonedNewIssue\nWHERE IssueType = 21 AND IfEffected = 1\nORDER BY InitialInfoPublDate DESC\nLIMIT 1;",
    "SELECT \n    AStockBasicInfoDB.LC_StockArchives.State \nFROM \n    AStockBasicInfoDB.LC_StockArchives \nWHERE \n    AStockBasicInfoDB.LC_StockArchives.CompanyCode = (SELECT CompanyCode FROM AStockBasicInfoDB.SecuMain WHERE ChiName = '福建坤彩材料科技股份有限公司');",
    "SELECT TotalAssets\nFROM AStockFinanceDB.LC_BalanceSheetAll\nWHERE CompanyCode = (SELECT CompanyCode FROM AStockBasicInfoDB.LC_StockArchives WHERE ChiName = '福建坤彩材料科技股份有限公司')\nAND EndDate = '2020-12-31'\nAND IfAdjusted = '2'\nAND IfMerged = '1';",
    "SELECT TotalLiability FROM AStockFinanceDB.LC_BalanceSheetAll\nWHERE CompanyCode = '福建坤彩材料科技股份有限公司的公司代码'\nAND EndDate = '2020-12-31'\nAND IfAdjusted = '否'\nAND IfMerged = '母公司';",
    "SELECT EstablishmentDate FROM AStockBasicInfoDB.LC_StockArchives WHERE CompanyCode = '海信视像科技股份有限公司';",
    "SELECT MainOperCost\nFROM AStockFinanceDB.LC_MainOperIncome\nWHERE CompanyCode = '海信视像科技股份有限公司' AND EndDate BETWEEN '2021-01-01' AND '2021-06-30' AND IfMerged = '合并' AND IfAdjusted = '否';",
    "SELECT AStockFinanceDB.LC_IncomeStatementAll.NetProfit\nFROM AStockFinanceDB.LC_IncomeStatementAll\nWHERE AStockFinanceDB.LC_IncomeStatementAll.EndDate BETWEEN '2021-01-01' AND '2021-06-30'\nAND AStockFinanceDB.LC_IncomeStatementAll.IfAdjusted = '否'\nAND AStockFinanceDB.LC_IncomeStatementAll.IfMerged = '是';",
    "SELECT COUNT(*) FROM AStockEventsDB.LC_InvestorDetail;",
    "SELECT MAX(ReceptionDate) AS LatestReceptionDate FROM AStockEventsDB.LC_InvestorRa WHERE InnerCode = (SELECT InnerCode FROM constantdb.secumain WHERE SecuMainID = '申能股份');",
    "SELECT Place \nFROM AStockEventsDB.LC_InvestorRa \nORDER BY ReceptionDate DESC, ReceptionDaTime DESC \nLIMIT 1;",
    "SELECT COUNT(*) AS NumberOfCompletedPlans\nFROM AStockShareholderDB.LC_ESOPSummary\nWHERE CompanyCode = '水晶光电' AND Process = 1022;",
    "SELECT MAX(ShareCelling) AS MaxShareCelling, MAX(FundCelling) AS MaxFundCelling\nFROM AStockShareholderDB.LC_ESOP\nWHERE Process = 1022; -- 1022 对应事件进程的“实施完成”",
    "SELECT \n    ESOP.PlanName,\n    ESOP.Process,\n    ESOP.IfPeriod,\n    ESOPSummary.Statement\nFROM \n    AStockShareholderDB.LC_ESOP AS ESOP\nJOIN \n    AStockShareholderDB.LC_ESOPSummary AS ESOPSummary ON ESOP.InnerCode = ESOPSummary.InnerCode\nWHERE \n    ESOP.IfPeriod IN (SELECT DM FROM CT_SystemConst WHERE LB = 999 AND DM IN (1,2))\nLIMIT 10;",
    "SELECT HighPrice, LowPrice\nFROM AStockMarketQuotesDB.QT_DailyQuote\nWHERE TradingDay = '2020-11-25';",
    "SELECT FORMAT(TurnoverRate, 2) AS TurnoverRate FROM AStockMarketQuotesDB.QT_StockPerformance\nWHERE TradingDay = '2020-09-25';",
    "SELECT ROUND(YearSharpeRatio, 2) AS AnnualizedSharpeRatio, ROUND(YearVolatilityByDay, 2) AS DailyVolatility\nFROM AStockMarketQuotesDB.QT_StockPerformance;",
    "SELECT SUM(TurnoverValue) / 10000 AS TotalTurnoverValue\nFROM AStockMarketQuotesDB.QT_DailyQuote\nWHERE InnerCode = (SELECT InnerCode FROM constantdb.secumain WHERE SecuName = '上海建工')\n  AND TradingDay BETWEEN '2021-06-10' AND '2021-06-17';",
    "SELECT TurnoverValueRM AS \"近一个月的成交金额(万元)\"\nFROM AStockMarketQuotesDB.QT_StockPerformance\nWHERE TradingDay >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH)\nGROUP BY InnerCode;",
    "SELECT \n    ROUND(AvgPriceTW, 2) AS AvgPriceTW,\n    ROUND(AvgPriceRM, 2) AS AvgPriceRM,\n    CASE \n        WHEN AvgPriceTW > AvgPriceRM THEN '近一周的成交均价高于月成交均价'\n        WHEN AvgPriceTW < AvgPriceRM THEN '近一周的成交均价低于月成交均价'\n        ELSE '近一周的成交均价与月成交均价相等'\n    END AS Comparison\nFROM \n    AStockMarketQuotesDB.QT_StockPerformance\nWHERE \n    InnerCode = (SELECT InnerCode FROM SecuMain WHERE Symbol = '上海建工');",
    "SELECT SHType\nFROM AStockShareholderDB.LC_MainSHListNew\nWHERE CompanyCode = (SELECT CompanyCode FROM constantdb.SecuMain WHERE SecuAbbr = '建元信托股份有限公司')\nAND InfoTypeCode = 1\nAND SHNo <= 10;",
    "SELECT \n    SHList AS \"最大股东\",\n    PCTOfTotalShares AS \"持股比例(%)\"\nFROM \n    AStockShareholderDB.LC_MainSHListNew\nWHERE \n    EndDate = '2020-12-31' AND\n    InfoTypeCode = 1 AND\n    SHNo = 1;",
    "SELECT SUM(T2.StateShares + T2.SLegalPersonShares) AS TotalStateShares\nFROM AStockShareholderDB.LC_MainSHListNew AS T1\nJOIN AStockShareholderDB.LC_ShareStru AS T2 ON T1.CompanyCode = T2.CompanyCode\nWHERE T1.InfoTypeCode = 1 AND T1.EndDate = '2020-12-31'",
    "SELECT TradingDate \nFROM ConstantDB.QT_TradingDayNew \nWHERE IfYearEnd = 1 \nORDER BY TradingDate DESC \nLIMIT 1;",
    "SELECT \n    AStockMarketQuotesDB.QT_DailyQuote.TurnoverValue \nFROM \n    AStockMarketQuotesDB.QT_DailyQuote \nINNER JOIN \n    AStockMarketQuotesDB.QT_TradingDayNew \nON \n    AStockMarketQuotesDB.QT_DailyQuote.TradingDay = AStockMarketQuotesDB.QT_TradingDayNew.TradingDate \nWHERE \n    AStockMarketQuotesDB.QT_TradingDayNew.IfYearEnd = 1 \nAND \n    AStockMarketQuotesDB.QT_DailyQuote.InnerCode = (SELECT InnerCode FROM AStockMarketQuotesDB.SecuMain WHERE SecuMain.SecuName = '鱼跃医疗') \nAND \n    EXTRACT(YEAR FROM AStockMarketQuotesDB.QT_DailyQuote.TradingDay) = 2020;",
    "SELECT SUM(TradeAmount) AS TotalTradeAmount\nFROM ConstantDB.QT_TradingDayNew\nWHERE TradingDate BETWEEN '2020-01-01' AND '2020-12-31'\n  AND IfTradingDay = 1;",
    "SELECT \n    ROUND(\n        (SELECT TurnoverValueRY FROM AStockMarketQuotesDB.QT_StockPerformance WHERE InnerCode = '鱼跃医疗' AND Ifsuspend = 0) / \n        (SELECT TotalMV FROM AStockMarketQuotesDB.QT_StockPerformance WHERE InnerCode = '鱼跃医疗' AND Ifsuspend = 0),\n        2\n    ) AS RatioValue;",
    "SELECT COUNT(*) \nFROM AStockMarketQuotesDB.QT_DailyQuote \nWHERE TradingDay = '2021-01-11' \n  AND PrevClosePrice > OpenPrice;",
    "SELECT InnerCode, RangePCT\nFROM AStockMarketQuotesDB.QT_StockPerformance\nWHERE TradingDay = '2021-01-11'\nORDER BY RangePCT DESC\nLIMIT 1;",
    "SELECT TurnoverValue FROM AStockMarketQuotesDB.QT_StockPerformance WHERE TradingDay = '2021-01-11' AND RangePCT > 0 AND Ifsuspend = 0;",
    "SELECT \n    `交易日`\nFROM \n    AStockMarketQuotesDB.QT_TurnoverVolTecIndex\nWHERE \n    `成交量` = (\n        SELECT MAX(`成交量`)\n        FROM AStockMarketQuotesDB.QT_TurnoverVolTecIndex\n        WHERE `交易日` BETWEEN '2019-07-01' AND '2019-12-31'\n        GROUP BY `交易日`\n        HAVING COUNT(DISTINCT `证券编号`) = (\n            SELECT MAX(counts)\n            FROM (\n                SELECT COUNT(DISTINCT `证券编号`) AS counts\n                FROM AStockMarketQuotesDB.QT_TurnoverVolTecIndex\n                WHERE `交易日` BETWEEN '2019-07-01' AND '2019-09-30'\n                GROUP BY `交易日`\n            ) AS subquery\n        )\n    )\nGROUP BY `交易日`\nORDER BY COUNT(DISTINCT `证券编号`) DESC\nLIMIT 1;",
    "SELECT COUNT(DISTINCT InnerCode) AS NumberOfSecurities\nFROM (\n    SELECT InnerCode\n    FROM AStockMarketQuotesDB.QT_StockPerformance AS A\n    WHERE A.TurnoverVolume > (\n        SELECT MAX(B.TurnoverVolume)\n        FROM AStockMarketQuotesDB.QT_StockPerformance AS B\n        WHERE B.TradingDay BETWEEN DATE_SUB(A.TradingDay, INTERVAL 90 DAY) AND DATE_SUB(A.TradingDay, INTERVAL 1 DAY)\n    )\n    AND A.TradingDay BETWEEN '2019-07-01' AND '2019-12-31'\n) AS C;",
    "SELECT \n    TradingDay, \n    COUNT(CASE WHEN ChangePCT > 0 THEN 1 END) AS RisingCount, \n    COUNT(CASE WHEN ChangePCT < 0 THEN 1 END) AS FallingCount\nFROM \n    AStockMarketQuotesDB.QT_StockPerformance\nWHERE \n    TradingDay = (\n        SELECT \n            TradingDay\n        FROM \n            AStockMarketQuotesDB.QT_StockPerformance\n        WHERE \n            ChangePCTTM > 0\n        GROUP BY \n            TradingDay\n        ORDER BY \n            COUNT(TradingDay) DESC\n        LIMIT 1\n    )\nGROUP BY \n    TradingDay;",
    "SELECT TradingDay\nFROM AStockMarketQuotesDB.QT_StockPerformance\nWHERE TurnoverVolume > (\n    SELECT MAX(TurnoverVolume)\n    FROM AStockMarketQuotesDB.QT_StockPerformance\n    WHERE TradingDay BETWEEN '2021-07-01' AND '2021-12-31'\n)\nAND TradingDay BETWEEN '2021-07-01' AND '2021-12-31'\nORDER BY TurnoverVolume DESC\nLIMIT 1;",
    "SELECT COUNT(DISTINCT InnerCode) \nFROM AStockMarketQuotesDB.CS_TurnoverVolTecIndex \nWHERE IndexCycle = 3 AND TradingDay IN (\n    SELECT TradingDay\n    FROM AStockMarketQuotesDB.CS_TurnoverVolTecIndex\n    WHERE IndexCycle = 3\n    GROUP BY TradingDay\n    HAVING MAX(AMA30) > ALL (\n        SELECT MAX(AMA30)\n        FROM AStockMarketQuotesDB.CS_TurnoverVolTecIndex\n        WHERE IndexCycle = 3\n        GROUP BY TradingDay\n        HAVING TradingDay BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH) AND CURRENT_DATE\n    )\n);",
    "SELECT\n  SUM(CASE WHEN QT_StockPerformance.ChangePCT > 0 THEN 1 ELSE 0 END) AS RisingStocksCount,\n  SUM(CASE WHEN QT_StockPerformance.ChangePCT < 0 THEN 1 ELSE 0 END) AS FallingStocksCount\nFROM\n  AStockMarketQuotesDB.QT_StockPerformance\nWHERE\n  QT_StockPerformance.TradingDay = 'XXXX年XX月XX日';",
    "SELECT COUNT(*) AS TotalFunds\nFROM PublicFundDB.MF_FundArchives\nWHERE EstablishmentDate >= '2020-01-01' AND EstablishmentDate < '2020-07-01';",
    "SELECT `SecuMain`.`SecuAbbr`, MAX(`MF_FundArchives`.`FoundedSize`) AS `MaxFoundedSize`\nFROM `PublicFundDB`.`MF_FundArchives`\nJOIN `SecuMain` ON `MF_FundArchives`.`InnerCode` = `SecuMain`.`InnerCode`\nGROUP BY `SecuMain`.`SecuAbbr`\nORDER BY `MaxFoundedSize` DESC\nLIMIT 1;",
    "SELECT FundType, COUNT(*) as FundCount\nFROM PublicFundDB.MF_FundArchives\nGROUP BY FundType\nORDER BY FundCount DESC\nLIMIT 1;",
    "SELECT EstablishmentDate FROM InstitutionDB.LC_InstiArchive WHERE ChiName = '博时基金公司';",
    "SELECT MF_FundArchives.InnerCode, SecuMain.ShortName, MF_FundArchives.EstablishmentDate\nFROM PublicFundDB.MF_FundArchives\nJOIN constantdb.SecuMain ON MF_FundArchives.InnerCode = SecuMain.InnerCode\nWHERE MF_FundArchives.EstablishmentDate < (SELECT EstablishmentDate FROM PublicFundDB.MF_FundArchives WHERE InnerCode = '博时基金公司InnerCode')\nORDER BY MF_FundArchives.EstablishmentDate DESC;",
    "SELECT MF_FundArchives.ExApplyingAbbr\nFROM PublicFundDB.MF_FundArchives\nWHERE MF_FundArchives.InvestAdvisorCode = (\n    SELECT MF_FundArchives.InvestAdvisorCode\n    FROM PublicFundDB.MF_FundArchives\n    WHERE MF_FundArchives.ExApplyingAbbr = '博时基金'\n);",
    "SELECT `公司简称`\nFROM AStockShareholderDB.LC_ShareHoldingSt\nWHERE `报告年份` = 2019 AND `股份性质` = '无限售流通A股'\nORDER BY `机构持股数量合计` DESC\nLIMIT 1;",
    "SELECT ROUND(InstitutionsHoldProp, 2) AS TotalInstitutionsHoldProp\nFROM AStockShareholderDB.LC_StockHoldingSt\nLIMIT 1;",
    "SELECT CAST(Top10StockholdersProp AS DECIMAL(10,2)) AS Top10StockholdersProp FROM AStockShareholderDB.LC_StockHoldingSt;",
    "SELECT SecuMain.SecuAbbr\nFROM AStockShareholderDB.LC_StockHoldingSt\nJOIN SecuMain ON LC_StockHoldingSt.InnerCode = SecuMain.InnerCode\nWHERE LC_StockHoldingSt.EndDate = '2021-12-31'\n  AND LC_StockHoldingSt.InfoSource = '基金定报'\n  AND LC_StockHoldingSt.UpdateTime IN (\n    SELECT MAX(UpdateTime)\n    FROM AStockShareholderDB.LC_StockHoldingSt\n    WHERE EndDate = '2021-12-31'\n      AND InfoSource = '基金定报'\n  )\nORDER BY LC_StockHoldingSt.InstitutionsHoldings DESC\nLIMIT 1;",
    "SELECT ROUND(InstitutionsHoldProp, 2) AS TotalInstitutionalUnrestrictedAStockPercentage\nFROM AStockShareholderDB.LC_StockHoldingSt\nWHERE CompanyCode = 'SpecificCompanyCode' AND EndDate = '2021-12-31';",
    "SELECT Top10StockholdersProp AS Top10StockholdersProp\nFROM AStockShareholderDB.LC_StockHoldingSt\nWHERE InfoSource <> '基金定报'\nLIMIT 10;",
    "SELECT MAX(ClosePrice) AS MaxClosePrice, TradingDay\nFROM AStockMarketQuotesDB.QT_DailyQuote\nWHERE TradingDay BETWEEN '2020-01-01' AND '2020-12-31'\nGROUP BY TradingDay\nORDER BY MaxClosePrice DESC\nLIMIT 1;",
    "SELECT \n    a.TradingDay AS '当日日期',\n    a.TurnoverVolume AS '当日成交量',\n    (SELECT MAX(TurnoverVolume) FROM AStockMarketQuotesDB.QT_StockPerformance WHERE TradingDay BETWEEN DATE_SUB(a.TradingDay, INTERVAL 1 MONTH) AND a.TradingDay) AS '近一个月最高成交量'\nFROM \n    AStockMarketQuotesDB.QT_StockPerformance a\nWHERE \n    a.TurnoverVolume = (SELECT MAX(TurnoverVolume) FROM AStockMarketQuotesDB.QT_StockPerformance WHERE TradingDay BETWEEN DATE_SUB(a.TradingDay, INTERVAL 1 MONTH) AND a.TradingDay)\nLIMIT 1;",
    "SELECT \n    COUNT(*) AS ContinuousHighVolumeDays\nFROM (\n    SELECT \n        TradingDay,\n        TurnoverVolume,\n        LAG(TurnoverVolume, 1) OVER (ORDER BY TradingDay) AS PrevDayVolume\n    FROM \n        AStockMarketQuotesDB.QT_DailyQuote\n    WHERE \n        InnerCode = (SELECT InnerCode FROM AStockMarketQuotesDB.SecuMain WHERE SecuName = '安琪酵母')\n        AND TradingDay BETWEEN '2020-01-01' AND '2020-12-31'\n) AS SubQuery\nWHERE \n    TurnoverVolume > PrevDayVolume\nGROUP BY \n    TradingDay\nHAVING \n    COUNT(*) > 1;",
    "SELECT MAX(ClosePrice) AS MaxClosePrice, TradingDay AS MaxClosePriceDate\nFROM AStockMarketQuotesDB.QT_StockPerformance\nWHERE YEAR(TradingDay) = 2021\nGROUP BY InnerCode\nORDER BY MaxClosePrice DESC\nLIMIT 1;",
    "SELECT \n    CS_StockPatterns.TradingDay, \n    CS_StockPatterns.InnerCode, \n    CS_StockPatterns.IfHighestTVolumeRM\nFROM \n    AStockMarketQuotesDB.CS_StockPatterns\nWHERE \n    CS_StockPatterns.IfHighestTVolumeRM = 1",
    "SELECT\n  InnerCode,\n  MAX(LENGTH(SUBSTRING_INDEX(GROUP_CONCAT(TurnoverVolume ORDER BY TradingDay) FROM ',', -1))) AS ContinuousVolumeDays\nFROM\n  AStockMarketQuotesDB.QT_DailyQuote\nGROUP BY\n  InnerCode;",
    "SELECT \n    MIN(ClosePrice) AS MinClosePrice, \n    TradingDay \nFROM \n    AStockMarketQuotesDB.QT_DailyQuote \nWHERE \n    TradingDay BETWEEN '2019-01-01' AND '2019-12-31'\nGROUP BY \n    TradingDay \nORDER BY \n    MinClosePrice ASC \nLIMIT 1;",
    "SELECT ROUND(VRSI, 4) AS VRSI_4dp\nFROM AStockMarketQuotesDB.QT_DailyQuote\nWHERE InnerCode = (SELECT InnerCode FROM constantdb.secumain WHERE SecuName = '厦门钨业')\nAND TradingDay = CURRENT_DATE;",
    "SELECT COUNT(*) AS ContinuousFallDays\nFROM (\n    SELECT\n        a.TradingDay,\n        a.ClosePrice,\n        LEAD(a.ClosePrice, 1) OVER (ORDER BY a.TradingDay) AS NextClosePrice\n    FROM\n        AStockMarketQuotesDB.QT_DailyQuote a\n    INNER JOIN\n        AStockMarketQuotesDB.QT_StockPerformance b\n    ON\n        a.InnerCode = b.InnerCode\n    WHERE\n        b.InnerCode = (SELECT InnerCode FROM AStockMarketQuotesDB.QT_StockPerformance WHERE StockName = '厦门钨业')\n    ORDER BY\n        a.TradingDay\n) AS c\nWHERE\n    c.ClosePrice > c.NextClosePrice",
    "SELECT TradingDay, LowestClosePriceYTD\nFROM AStockMarketQuotesDB.QT_StockPerformance\nWHERE TradingDay BETWEEN '2021-01-01' AND '2021-12-31'\nORDER BY LowestClosePriceYTD ASC\nLIMIT 1;",
    "SELECT ROUND(VRSI, 4) AS VRSI_4dp\nFROM AStockMarketQuotesDB.QT_DailyQuote\nWHERE InnerCode = (SELECT InnerCode FROM constantdb.secumain WHERE SecuName = '厦门钨业')\nAND TradingDay = CURRENT_DATE;",
    "SELECT COUNT(*) AS ContinuousLossDays\nFROM AStockMarketQuotesDB.QT_DailyQuote\nWHERE InnerCode = (SELECT InnerCode FROM AStockMarketQuotesDB.SecuMain WHERE SecuAbbr = '厦门钨业')\nAND ClosePrice < PrevClosePrice\nAND TradingDay >= (SELECT MAX(TradingDay) FROM AStockMarketQuotesDB.QT_DailyQuote WHERE InnerCode = (SELECT InnerCode FROM AStockMarketQuotesDB.SecuMain WHERE SecuAbbr = '厦门钨业') AND ClosePrice >= PrevClosePrice)\nGROUP BY InnerCode;",
    "SELECT Standard, Industry, SecondIndustryCode, SecondIndustryName\nFROM AStockIndustryDB.LC_ExgIndustry\nWHERE Standard IN (1, 3, 5, 6, 7, 9, 11, 12, 18, 19, 20, 21, 22, 23, 24, 28, 30, 32, 37, 38, 40, 42, 44)\nAND IfPerformed = 1;",
    "SELECT COUNT(*) \nFROM AStockIndustryDB.LC_ConceptList \nWHERE ConceptState = 1 AND EndDate >= '2023-12-31' OR EndDate IS NULL;",
    "SELECT ConceptEngName FROM AStockIndustryDB.LC_ConceptList WHERE SubclassName = '芯片概念';",
    "SELECT SecondIndustryName \nFROM AStockIndustryDB.LC_ExgIndustry \nWHERE CompanyCode = (SELECT CompanyCode FROM SecuMain WHERE ShortName = '杰瑞股份') \n  AND Standard = 38;",
    "SELECT COUNT(*) AS StockCount\nFROM AStockIndustryDB.LC_ExgIndustry\nWHERE Industry = '申万二级行业'\nAND InfoPublDate = '2021-12-31';",
    "SELECT ROUND(\n    (SELECT TotalMV FROM AStockIndustryDB.LC_IndustryValuation WHERE IndustryCode = (SELECT SecondIndustryCode FROM AStockIndustryDB.LC_ExgIndustry WHERE CompanyCode = '股票代码') AND Standard = 24) /\n    (SELECT SUM(TotalMV) FROM AStockIndustryDB.LC_IndustryValuation WHERE Standard = 24 AND IndustryCode IN (SELECT SecondIndustryCode FROM AStockIndustryDB.LC_ExgIndustry WHERE Standard = 9)),\n    2\n) * 100 AS 'TotalMarketValuePercentage';",
    "SELECT FirstIndustryName \nFROM AStockIndustryDB.LC_ExgIndustry \nWHERE CompanyCode = (SELECT CompanyCode FROM constantdb.secumain WHERE SecuMain.CompanyName = '均胜电子') \n  AND Standard = 38 \n  AND InfoPublDate <= '2021-12-31';",
    "SELECT COUNT(*) AS NumberOfStocks\nFROM AStockIndustryDB.LC_ExgIndustry\nWHERE Standard = 38 -- 申万行业分类(新)\n  AND Year(InfoPublDate) = 2021\n  AND Month(InfoPublDate) = 12\n  AND Day(InfoPublDate) = 31\n  AND IfPerformed = 1; -- 确保数据已被执行",
    "SELECT\n    ROUND(\n        (SELECT TotalNBVFloatMVRatio FROM AStockMarketQuotesDB.CS_StockCapFlowIndex WHERE InnerCode = '均胜电子的内部编码' AND TradingDay = '2021-12-31'),\n        2\n    ) AS StockMarketRatio",
    "SELECT TotalMV \nFROM AStockIndustryDB.LC_IndustryValuation \nWHERE TradingDay = '2020-07-02' \n  AND SectorCode = '5' \n  AND IndustryCode = '24' OR IndustryCode = '41';",
    "SELECT NegotiableMV FROM AStockIndustryDB.LC_IndustryValuation WHERE SectorCode = 5 AND StatType = 2;",
    "SELECT NegotiableMV\nFROM AStockIndustryDB.LC_IndustryValuation\nWHERE TradingDay = (\n    SELECT MAX(TradingDay)\n    FROM AStockIndustryDB.LC_IndustryValuation\n    WHERE TradingDay > CURRENT_DATE - INTERVAL 1 DAY\n    AND SectorCode = 5\n    AND StatType = 2\n)",
    "SELECT \n    SUM(CASE WHEN TypeCode = '1012' THEN EmployeeSum ELSE 0 END) AS TotalCompensation,\n    COUNT(DISTINCT ID) AS ManagementPersonnelCount\nFROM \n    AStockFinanceDB.LC_Staff\nWHERE \n    EndDate = '2019-12-31'\n    AND InfoSource = '软通动力'\n    AND TypeCode IN ('1012', '1014', '1016', '1018', '1099')\n    AND ClassfiedMethod = 1000;",
    "SELECT High3Directors FROM AStockFinanceDB.LC_RewardStat;",
    "SELECT \n    AStockOperationsDB.LC_RewardStat.TotalYearPay AS `2020_TotalYearPay`, \n    (SELECT TotalYearPay FROM AStockOperationsDB.LC_RewardStat WHERE EndDate = '2019-12-31') AS `2019_TotalYearPay`\nFROM \n    AStockOperationsDB.LC_RewardStat\nWHERE \n    EndDate = '2020-12-31';",
    "SELECT InvestAdvisorName FROM PublicFundDB.MF_InvestAdvisorOutline WHERE InvestAdvisorCode = (SELECT CompanyCode FROM LC_InstiArchive WHERE FundName = '天弘增利短债C');",
    "SELECT \n    MF_FundArchives.Type, \n    CT_SystemConst.Description\nFROM \n    PublicFundDB.MF_FundArchives\nJOIN \n    PublicFundDB.CT_SystemConst ON MF_FundArchives.Type = CT_SystemConst.DM\nWHERE \n    CT_SystemConst.LB = 1210;",
    "SELECT InvestStyle, InvestmentType\nFROM PublicFundDB.MF_FundArchives\nWHERE SecurityCode = '天弘增利短债C';",
    "SELECT SUM(TotalRDInput) AS TotalRDInvestment\nFROM AStockFinanceDB.LC_IntAssetsDetail\nWHERE EndDate = '2021-12-31'\n  AND IfMerged = 1\n  AND IfAdjusted = 1\n  AND InfoSourceCode IN ('110104', '120104');",
    "SELECT RDInputRatio FROM AStockFinanceDB.LC_IntAssetsDetail\nWHERE EndDate = '2021-12-31' AND IfMerged = 1 AND IfAdjusted = 1;",
    "SELECT\n    CEILING(RDStaffNum / (RDStaffNumRatio / 100)) AS TotalEmployeeNum\nFROM\n    AStockFinanceDB.LC_IntAssetsDetail\nWHERE\n    EndDate = '2021-12-31'\n    AND RDStaffNum IS NOT NULL\n    AND RDStaffNumRatio IS NOT NULL",
    "SELECT MAX(LatestLoanSum) AS MaxLoanAmount\nFROM AStockEventsDB.LC_Credit\nWHERE EventSubject = '陆家嘴' AND YEAR(InitialInfoPublDate) = 2019;",
    "SELECT \n    Borrower,\n    MAX(FirstLoanSum) AS MaxFirstLoanSum\nFROM \n    AStockEventsDB.LC_Credit\nWHERE \n    YEAR(LoanBeginDate) = 2019\nGROUP BY \n    Borrower\nORDER BY \n    MaxFirstLoanSum DESC\nLIMIT 1;",
    "SELECT EventContent, Borrower, Lender, LatestLoanSum\nFROM AStockEventsDB.LC_Credit\nWHERE EventSubject = '陆家嘴' AND YEAR(InfoPublDate) = 2019\nORDER BY InfoPublDate DESC\nLIMIT 1;",
    "SELECT MAX(LatestGuaranteeSum) AS MaxGuaranteeAmount\nFROM AStockEventsDB.LC_Warrant\nWHERE EventSubject = '1' AND AgreementDate BETWEEN '2020-01-01' AND '2020-12-31'",
    "SELECT MAX(LatestGuaranteeSum) AS MaxGuaranteeAmount, SecuredParty\nFROM AStockEventsDB.LC_Warrant\nWHERE CompanyCode = (SELECT CompanyCode FROM AStockEventsDB.SecuMain WHERE ShortName = '亿帆医药')\nAND AgreementDate BETWEEN '2020-01-01' AND '2020-12-31'\nGROUP BY SecuredParty;",
    "SELECT EventContent, SubjectName, ObjectName, LatestGuaranteeSum\nFROM AStockEventsDB.LC_Warrant\nWHERE CompanyCode = '亿帆医药'\nAND YEAR(InitialInfoPublDate) = 2020\nORDER BY InfoPublDate DESC\nLIMIT 1;",
    "SELECT COUNT(*) AS total_announcements\nFROM AStockEventsDB.LC_Warrant\nWHERE CompanyCode = (SELECT CompanyCode FROM constantdb.secumain WHERE ShortName = '许继电气')\nAND InfoPublDate BETWEEN '2021-01-01' AND '2021-12-31';",
    "SELECT ContractObject, MAX(AmountInvolved) AS MaxAmount\nFROM AStockEventsDB.LC_MajorContract\nWHERE CompanyCode = '许继电气' AND YEAR(AgreementDate) = 2021\nGROUP BY ContractObject\nORDER BY MaxAmount DESC\nLIMIT 1;",
    "SELECT A.ContractObject, A.AgreementDate AS ContractDate, B.InfoPublDate AS AnnouncementDate\nFROM AStockEventsDB.LC_MajorContract AS A\nJOIN AStockEventsDB.LC_Credit AS B ON A.CompanyCode = B.CompanyCode\nWHERE A.AgreementDate BETWEEN '2021-01-01' AND '2021-12-31'\n  AND B.InfoPublDate < A.AgreementDate\n  AND A.AmountInvolved = (\n    SELECT MAX(AmountInvolved)\n    FROM AStockEventsDB.LC_MajorContract\n    WHERE AgreementDate BETWEEN '2021-01-01' AND '2021-12-31'\n  )\nLIMIT 1;",
    "SELECT\n    (ReduceShareCeiling - ReduceShareFloor) AS ShareDifference\nFROM\n    AStockShareholderDB.LC_TransferPlan\nWHERE\n    CompanyCode = (SELECT CompanyCode FROM SecuMain WHERE CompanyName = '美亚光电')\n    AND YEAR(InfoPublDate) = 2021\n    AND TransferPlanType = (SELECT DM FROM CT_SystemConst WHERE LB = 1306 AND DM IN (124,127,128,201) AND Description = '主动减持计划')\n    AND EventProcedure IN (SELECT DM FROM CT_SystemConst WHERE LB = 2380 AND DM IN (1,2,3,4,5,6))",
    "SELECT COUNT(DISTINCT SHName) AS NumberOfShareholders\nFROM AStockShareholderDB.LC_TransferPlan\nWHERE TransferPlanType = 127\nAND YEAR(InfoPublDate) = 2021;",
    "SELECT MAX(ReduceRatioCeiling) AS MaxReductionRatio, SHName\nFROM AStockShareholderDB.LC_TransferPlan\nWHERE YEAR(InfoPublDate) = 2021 AND TransferPlanType = 127\nGROUP BY SHName\nORDER BY MaxReductionRatio DESC\nLIMIT 1;",
    "SELECT AStockCode, ISINCode \nFROM AStockBasicInfoDB.LC_StockArchives\nWHERE ChiName = '利亚德';",
    "SELECT \n    AStockIndustryDB.LC_StockArchives.InduCSRC AS LatestCSRCIndustryCode,\n    COUNT(AStockIndustryDB.LC_StockArchives.CompanyCode) AS NumberOfListedCompanies\nFROM \n    AStockIndustryDB.LC_StockArchives\nWHERE \n    AStockIndustryDB.LC_StockArchives.InduCSRC IS NOT NULL\nGROUP BY \n    AStockIndustryDB.LC_StockArchives.InduCSRC\nORDER BY \n    AStockIndustryDB.LC_StockArchives.XGRQ DESC\nLIMIT 1;",
    "SELECT TOP 3 IR.ReceptionDate AS Date, IR.Place, COUNT(ID) AS NumberOfInstitutions\nFROM AStockEventsDB.LC_InvestorRa IR\nJOIN AStockEventsDB.LC_InvestorDetail ID ON IR.ID = ID.RID\nWHERE IR.InnerCode = (SELECT CompanyCode FROM AStockIndustryDB.LC_ExgIndustry WHERE Industry = '利亚德')\nORDER BY IR.ReceptionDate DESC;",
    "SELECT COUNT(DISTINCT SHID) AS NumberOfNationalShareholdingShareholders\nFROM AStockShareholderDB.LC_NationalStockHoldSt\nWHERE EndDate = '2021-12-31';",
    "SELECT SUM(HoldAShareSum) AS TotalHoldAShareSum\nFROM AStockShareholderDB.LC_NationalStockHoldSt;",
    "SELECT SHName, MAX(PCTOfTotalShares) AS HighestShareholdingRatio\nFROM AStockShareholderDB.LC_NationalStockHoldSt\nGROUP BY SHName\nORDER BY HighestShareholdingRatio DESC\nLIMIT 1;",
    "SELECT \n    SUM(CASE WHEN ClassfiedMethod = 9000 THEN EmployeeSum ELSE 0 END) AS TotalEmployees,\n    SUM(CASE WHEN ClassfiedMethod = 3000 AND TypeName = '技术人员' THEN EmployeeSum ELSE 0 END) AS TechnicalPersonnel,\n    ROUND((SUM(CASE WHEN ClassfiedMethod = 3000 AND TypeName = '技术人员' THEN EmployeeSum ELSE 0 END) / \n           SUM(CASE WHEN ClassfiedMethod = 9000 THEN EmployeeSum ELSE 0 END)) * 100, 2) AS TechnicalPersonnelRatio\nFROM \n    AStockOperationsDB.LC_Staff\nWHERE \n    EndDate = '2021-12-31';",
    "SELECT \n    ROUND(\n        (SUM(CASE WHEN T1.TypeCode = '5015' THEN T1.EmployeeSum ELSE 0 END) + SUM(CASE WHEN T1.TypeCode = '5005' THEN T1.EmployeeSum ELSE 0 END)) \n        / SUM(T1.EmployeeSum), \n        2\n    ) AS MasterAndAboveDegreePercentage\nFROM \n    AStockOperationsDB.LC_Staff T1\nWHERE \n    T1.ClassfiedMethod = '5000' AND T1.InfoSource = '定期报告、招股说明书等';",
    "SELECT \n    SUM(CASE WHEN TypeCode = '3031' THEN EmployeeSum ELSE 0 END) AS ProductionPersonnel,\n    SUM(CASE WHEN TypeCode = '3034' THEN EmployeeSum ELSE 0 END) AS SalesPersonnel,\n    SUM(CASE WHEN TypeCode = '3035' THEN EmployeeSum ELSE 0 END) AS TechnicalPersonnel,\n    SUM(EmployeeSum) AS TotalEmployees\nFROM \n    AStockOperationsDB.LC_Staff\nWHERE \n    ClassfiedMethod = '3000' AND\n    TypeCode IN ('3031', '3034', '3035')\nGROUP BY \n    NULL;",
    "SELECT\n  SmallNetBuyValue AS SmallOrderNetInflow,\n  MediumNetBuyValue AS MediumOrderNetInflow,\n  LargeNetBuyValue AS LargeOrderNetInflow\nFROM\n  AStockMarketQuotesDB.CS_StockCapFlowIndex\nWHERE\n  TradingDay = '2021-12-24'",
    "SELECT \n    CAST((LargeNBValueRatio - SmallNBValueRatio) AS DECIMAL(10, 2)) AS LargeVsSmallNetBuyValueDifference\nFROM \n    AStockMarketQuotesDB.CS_StockCapFlowIndex\nLIMIT 10;",
    "SELECT \n    CO.ConceptName,\n    (CASE WHEN CS.SmallNBValueRatio IS NULL THEN 0 ELSE CS.SmallNBValueRatio END) - (CASE WHEN CS.LargeNBValueRatio IS NULL THEN 0 ELSE CS.LargeNBValueRatio END) AS SmallLargeNetBuyValueDifference\nFROM \n    AStockIndustryDB.LC_COConcept CC\nJOIN \n    AStockIndustryDB.LC_ConceptList CO ON CC.ConceptCode = CO.ConceptCode\nJOIN \n    AStockMarketQuotesDB.CS_StockCapFlowIndex CS ON CC.InnerCode = CS.InnerCode\nWHERE \n    CS.TradingDay = '2021-12-24'\n    AND CC.IndiState = 1\n    AND CO.ConceptState = 1\nGROUP BY \n    CO.ConceptName;",
    "SELECT COUNT(*) AS ChangeCount, InfoPublDate AS ChangeDate\nFROM AStockIndustryDB.LC_Business\nWHERE YEAR(InfoPublDate) = 2020 AND IfPassed = 1\nGROUP BY InfoPublDate\nORDER BY ChangeDate;",
    "SELECT COUNT(*) AS event_count, LC_Credit.InfoPublDate\nFROM AStockEventsDB.LC_Credit\nJOIN AStockBasicInfoDB.LC_Business ON LC_Credit.CompanyCode = LC_Business.CompanyCode\nWHERE LC_Business.InfoPublDate BETWEEN '2020-01-01' AND '2020-12-31'\nAND LC_Credit.InfoPublDate BETWEEN DATE_SUB(LC_Business.InfoPublDate, INTERVAL 30 DAY) AND DATE_ADD(LC_Business.InfoPublDate, INTERVAL 30 DAY)\nGROUP BY LC_Credit.InfoPublDate;",
    "SELECT \n    (SELECT COUNT(*) FROM AStockIndustryDB.LC_Business WHERE CompanyCode = '永泰能源' AND YEAR(InfoPublDate) = 2020) AS BusinessChanges2020,\n    (SELECT COUNT(*) FROM AStockIndustryDB.LC_Business WHERE CompanyCode = '永泰能源' AND YEAR(InfoPublDate) = 2019) AS BusinessChanges2019,\n    (SELECT COUNT(*) FROM AStockEventsDB.LC_Credit WHERE CompanyCode = '永泰能源' AND YEAR(InfoPublDate) = 2020) AS CreditEvents2020,\n    (SELECT COUNT(*) FROM AStockEventsDB.LC_Credit WHERE CompanyCode = '永泰能源' AND YEAR(InfoPublDate) = 2019) AS CreditEvents2019,\n    ((SELECT COUNT(*) FROM AStockIndustryDB.LC_Business WHERE CompanyCode = '永泰能源' AND YEAR(InfoPublDate) = 2020) - (SELECT COUNT(*) FROM AStockIndustryDB.LC_Business WHERE CompanyCode = '永泰能源' AND YEAR(InfoPublDate) = 2019)) / (SELECT COUNT(*) FROM AStockIndustryDB.LC_Business WHERE CompanyCode = '永泰能源' AND YEAR(InfoPublDate) = 2019) * 100 AS BusinessChangeRate,\n    ((SELECT COUNT(*) FROM AStockEventsDB.LC_Credit WHERE CompanyCode = '永泰能源' AND YEAR(InfoPublDate) = 2020) - (SELECT COUNT(*) FROM AStockEventsDB.LC_Credit WHERE CompanyCode = '永泰能源' AND YEAR(InfoPublDate) = 2019)) / (SELECT COUNT(*) FROM AStockEventsDB.LC_Credit WHERE CompanyCode = '永泰能源' AND YEAR(InfoPublDate) = 2019) * 100 AS CreditEventRate",
    "SELECT COUNT(*) AS NumberOfFunds, SUM(FoundedSize) AS TotalSize\nFROM PublicFundDB.MF_FundArchives\nWHERE Manager LIKE '%鹏华%'\nAND EstablishmentDate >= '2019-01-01'\nAND EstablishmentDate < '2020-01-01';",
    "SELECT COUNT(*) AS NumberOfStockFunds, AVG(FoundedSize) AS AverageFoundingSize\nFROM PublicFundDB.MF_FundArchives\nWHERE FundTypeCode = 1101;",
    "SELECT \n    COUNT(CASE WHEN InvestmentType IN ('7', '8') THEN 1 END) AS PassiveInvestmentCount,\n    COUNT(*) AS TotalFundCount,\n    ROUND((COUNT(CASE WHEN InvestmentType IN ('7', '8') THEN 1 END) / COUNT(*)) * 100, 2) AS PassiveInvestmentPercentage\nFROM \n    PublicFundDB.MF_FundArchives\nWHERE \n    YEAR(EstablishmentDate) = 2019\n    AND FundNature = '1'\n    AND FundTypeCode = '1101'\n    AND InvestmentType IN ('7', '8');",
    "SELECT \n    A.SHSNum AS TotalShareholders,\n    A.AAverageHoldSum AS AShareholdersAverageHoldings\nFROM \n    AStockShareholderDB.LC_SHNumber AS A\nWHERE \n    A.CompanyCode = (SELECT CompanyCode FROM AStockShareholderDB.LC_SHNumber WHERE CompanyCode LIKE '%安琪酵母%' LIMIT 1)\n    AND A.EndDate = '2021-12-31';",
    "SELECT\n  ROUND((t2.AAverageHoldSum / t1.AAverageHoldSum - 1) * 100, 2) AS AHoldSumGRQuarter\nFROM\n  AStockShareholderDB.LC_SHNumber t1\nJOIN\n  AStockShareholderDB.LC_SHNumber t2\nON\n  t1.CompanyCode = t2.CompanyCode\n  AND t1.EndDate = DATE_SUB(t2.EndDate, INTERVAL 1 QUARTER)\nWHERE\n  t2.AverageHoldSum IS NOT NULL\n  AND t1.AverageHoldSum IS NOT NULL;",
    "SELECT \n    SUM(ManagementSalary) AS TotalManagementSalary,\n    AVG(ManagementSalary) AS AverageManagementSalary\nFROM \n    AStockShareholderDB.ManagementSalary\nWHERE \n    Year = 2021;\n\nSELECT \n    (SELECT SUM(ManagementSalary) FROM AStockShareholderDB.ManagementSalary WHERE Year = 2021) / AVG(ManagementSalary) OVER() - 1 AS DifferenceRate\nFROM \n    AStockShareholderDB.ManagementSalary\nWHERE \n    Year = 2021;",
    "SELECT \n    COUNT(*) AS TotalBuybacks,\n    ROUND(SUM(BuybackMoney) / 10000, 2) AS TotalAmount,\n    BuybackSum AS Shares\nFROM \n    AStockShareholderDB.LC_Buyback\nWHERE \n    CompanyCode = '健康元药业集团股份有限公司' AND\n    StartDate BETWEEN '2020-01-01' AND '2021-12-31'\nGROUP BY \n    BuybackID",
    "SELECT\n    A.ID,\n    A.FirstPublDate,\n    A.BuybackSum,\n    A.BuybackMoney,\n    A.BuybackPurpose,\n    A.PurposeDesc\nFROM\n    AStockShareholderDB.LC_Buyback AS A\nJOIN\n    AStockShareholderDB.LC_BuybackAttach AS B ON A.ID = B.BuybackID\nWHERE\n    A.CompanyCode = '健康元药业集团股份有限公司' AND\n    A.BuybackPurpose = (SELECT DM FROM CT_SystemConst WHERE LB = 2560 AND DM IN ('1', '2', '3')) AND\n    A.EventProcedure = (SELECT DM FROM CT_SystemConst WHERE LB = 1059 AND DM = '1022')\nORDER BY\n    A.FirstPublDate DESC\nLIMIT 1;",
    "SELECT \n    LC_Buyback.CompanyCode,\n    LC_Buyback.BuybackMoney,\n    RANK() OVER (ORDER BY LC_Buyback.BuybackMoney DESC) AS Rank\nFROM \n    AStockShareholderDB.LC_Buyback\nWHERE \n    LC_Buyback.FirstPublDate BETWEEN '2020-01-01' AND '2021-12-31'",
    "SELECT \n    ESOP.PlanName,\n    ESOP.PartiAmount AS TotalParticipants,\n    ROUND((ESOP.ManagementPartiAmount / ESOP.PartiAmount) * 100, 2) AS ManagementParticipationPercentage\nFROM \n    AStockShareholderDB.LC_ESOP AS ESOP\nWHERE \n    ESOP.InnerCode = (SELECT InnerCode FROM AStockOperationsDB.LC_Staff WHERE TypeName = '伟明环保')\n    AND ESOP.Process = (SELECT MAX(Process) FROM AStockShareholderDB.LC_ESOPSummary WHERE InnerCode = ESOP.InnerCode)",
    "SELECT ShareSource, ShareCelling \nFROM AStockShareholderDB.LC_ESOP;",
    "SELECT \n    COUNT(*) AS NumberOfESOPs,\n    ROUND(AVG(ShareCelling) / (SELECT MAX(ShareCelling) FROM AStockShareholderDB.LC_ESOPSummary) * 100, 2) AS SharePlanScale,\n    ROUND(AVG(ManagementPartiAmount) / (SELECT MAX(ManagementPartiAmount) FROM AStockShareholderDB.LC_ESOP) * 100, 2) AS ManagementParticipationRate,\n    ROUND(AVG(LockDuration) / (SELECT MAX(LockDuration) FROM AStockShareholderDB.LC_ESOP) * 100, 2) AS LockDurationRate\nFROM \n    AStockShareholderDB.LC_ESOP\nWHERE \n    CompanyCode = (SELECT CompanyCode FROM AStockShareholderDB.LC_MainSHListNew WHERE SHList = '伟明环保')\n    AND EXISTS (\n        SELECT 1 FROM AStockShareholderDB.LC_MainSHListNew AS MS WHERE \n        MS.SecuCode = AStockShareholderDB.LC_ESOP.SecuCode\n        AND MS.SHKind = '证券市场和证券类别相同'\n    )",
    "SELECT \n    ROUND(InstitutionsHoldProp, 2) AS TotalInstitutionsHoldProp, \n    ROUND(FundsHoldProp, 2) AS FundsHoldProp\nFROM \n    AStockShareholderDB.LC_StockHoldingSt\nWHERE \n    CompanyCode = '300383' AND\n    EndDate = '2021-12-31';",
    "SELECT\n    ROUND(InstitutionsHoldProp, 2) AS '第一季度末机构持股比例(%)',\n    ROUND(InstitutionsHoldPropA, 2) AS '第二季度末机构持股比例(%)',\n    ROUND(InstitutionsHoldPropB, 2) AS '第三季度末机构持股比例(%)',\n    ROUND(InstitutionsHoldPropC, 2) AS '第四季度末机构持股比例(%)'\nFROM\n    AStockShareholderDB.LC_StockHoldingSt\nWHERE\n    CompanyCode = '300383'\n    AND InfoSource != '基金定报'\n    AND (StatDate BETWEEN '2021-03-31' AND '2021-12-31')\nORDER BY\n    StatDate",
    "SELECT \n    ROUND(InstitutionsHoldProp, 2) AS InstitutionsHoldProp_2020,\n    ROUND(InstitutionsHoldPropA, 2) AS InstitutionsHoldPropA_2020,\n    ROUND(InstitutionsHoldPropT, 2) AS InstitutionsHoldPropT_2020,\n    ROUND(InstitutionsHoldProp, 2) AS InstitutionsHoldProp_2021,\n    ROUND(InstitutionsHoldPropA, 2) AS InstitutionsHoldPropA_2021,\n    ROUND(InstitutionsHoldPropT, 2) AS InstitutionsHoldPropT_2021,\n    ROUND((InstitutionsHoldProp_2021 - InstitutionsHoldProp_2020) * 100, 2) AS ChangeInstitutionsHoldProp,\n    ROUND((InstitutionsHoldPropA_2021 - InstitutionsHoldPropA_2020) * 100, 2) AS ChangeInstitutionsHoldPropA,\n    ROUND((InstitutionsHoldPropT_2021 - InstitutionsHoldPropT_2020) * 100, 2) AS ChangeInstitutionsHoldPropT,\n    ROUND(FundsHoldProp, 2) AS FundsHoldProp_2020,\n    ROUND(FundsHoldPropA, 2) AS FundsHoldPropA_2020,\n    ROUND(FundsHoldPropT, 2) AS FundsHoldPropT_2020,\n    ROUND(FundsHoldProp, 2) AS FundsHoldProp_2021,\n    ROUND(FundsHoldPropA, 2) AS FundsHoldPropA_2021,\n    ROUND(FundsHoldPropT, 2) AS FundsHoldPropT_2021,\n    ROUND((FundsHoldProp_2021 - FundsHoldProp_2020) * 100, 2) AS ChangeFundsHoldProp,\n    ROUND((FundsHoldPropA_2021 - FundsHoldPropA_2020) * 100, 2) AS ChangeFundsHoldPropA,\n    ROUND((FundsHoldPropT_2021 - FundsHoldPropT_2020) * 100, 2) AS ChangeFundsHoldPropT\nFROM \n    AStockShareholderDB.LC_StockHoldingSt\nWHERE \n    EndDate = '2020-12-31' OR EndDate = '2021-12-31'\nGROUP BY \n    EndDate",
    "SELECT COUNT(*) AS DividendCount,\n       ROUND(SUM(CashDiviRMB), 2) AS TotalDividendAmount,\n       DividendImplementDate\nFROM AStockFinanceDB.LC_Dividend\nWHERE IfDividend = 1\n      AND AdvanceDate BETWEEN '2020-01-01' AND '2021-12-31'\n      AND DividendImplementDate IS NOT NULL;",
    "SELECT \n    CASE \n        WHEN MAX(InstitutionsHoldProp) > MIN(InstitutionsHoldProp) THEN '是'\n        ELSE '否'\n    END AS IsIncreased,\n    CAST(MAX(InstitutionsHoldProp) AS DECIMAL(10,4)) AS MaxProp,\n    CAST(MIN(InstitutionsHoldProp) AS DECIMAL(10,4)) AS MinProp\nFROM \n    AStockShareholderDB.LC_StockHoldingSt\nWHERE \n    EndDate BETWEEN '2020-01-01' AND '2021-12-31';",
    "SELECT COUNT(*) AS TotalMajorLoans,\n       MAX(FirstLoanSum) AS MaxLoanAmount,\n       Borrower AS BorrowerName,\n       Lender AS LenderName\nFROM AStockEventsDB.LC_Credit\nWHERE LoanBeginDate BETWEEN '2020-01-01' AND '2021-12-31'\n  AND FirstLoanSum > 30000000\nGROUP BY Borrower, Lender;",
    "SELECT \n    AStockMarketQuotesDB.SecuMain.SecuAbbr AS CompanyAbbreviation, \n    AStockMarketQuotesDB.SecuMain.SecuCode AS StockCode\nFROM \n    AStockMarketQuotesDB.QT_StockPerformance\nJOIN \n    AStockMarketQuotesDB.SecuMain ON AStockMarketQuotesDB.QT_StockPerformance.InnerCode = AStockMarketQuotesDB.SecuMain.InnerCode\nWHERE \n    AStockMarketQuotesDB.QT_StockPerformance.TradingDay = '2021-12-31'\n    AND AStockMarketQuotesDB.QT_StockPerformance.HighestClosePriceRM > (\n        SELECT MAX(HighestClosePriceRM)\n        FROM AStockMarketQuotesDB.QT_StockPerformance\n        WHERE TradingDay BETWEEN '2021-12-01' AND '2021-12-31'\n        AND InnerCode = AStockMarketQuotesDB.QT_StockPerformance.InnerCode\n    )",
    "SELECT \n    AStockMarketQuotesDB.QT_StockPerformance.SecuAbbr AS CompanyName,\n    AStockShareholderDB.LC_MainSHListNew.SHList AS EnterpriseCapitalShareholder\nFROM \n    AStockMarketQuotesDB.QT_StockPerformance\nJOIN \n    AStockShareholderDB.LC_MainSHListNew ON AStockMarketQuotesDB.QT_StockPerformance.InnerCode = AStockShareholderDB.LC_MainSHListNew.SecuInnerCode\nJOIN \n    AStockShareholderDB.LC_SHTypeClassifi ON AStockShareholderDB.LC_MainSHListNew.SHID = AStockShareholderDB.LC_SHTypeClassifi.SHID\nWHERE \n    AStockMarketQuotesDB.QT_StockPerformance.HighPriceRM = (SELECT MAX(HighPriceRM) FROM AStockMarketQuotesDB.QT_StockPerformance)\n    AND AStockShareholderDB.LC_SHTypeClassifi.SHAttribute = 2\nLIMIT 10;",
    "SELECT \n    LC_ExgIndustry.FirstIndustryCode AS '行业代码',\n    SecuMain.AbbName AS '公司简称',\n    LC_SHTypeClassifi.SHName AS '企业资本股东名称'\nFROM \n    AStockMarketQuotesDB.QT_StockPerformance AS QT_StockPerformance\nINNER JOIN \n    AStockIndustryDB.LC_ExgIndustry AS LC_ExgIndustry ON QT_StockPerformance.InnerCode = LC_ExgIndustry.CompanyCode\nINNER JOIN \n    AStockShareholderDB.LC_SHTypeClassifi AS LC_SHTypeClassifi ON QT_StockPerformance.InnerCode = LC_SHTypeClassifi.SHCode\nINNER JOIN \n    constantdb.SecuMain AS SecuMain ON QT_StockPerformance.InnerCode = SecuMain.InnerCode\nWHERE \n    QT_StockPerformance.TradingDay = '2021-12-31' AND\n    QT_StockPerformance.HighPriceTM = QT_StockPerformance.HighestClosePriceTM AND\n    LC_SHTypeClassifi.FirstLvCode = '2000000' AND\n    LC_SHTypeClassifi.SecondLvCode = '2010000' AND\n    LC_SHTypeClassifi.ThirdLvCode = '2010100'\nGROUP BY \n    LC_ExgIndustry.FirstIndustryCode, \n    SecuMain.AbbName, \n    LC_SHTypeClassifi.SHName\nORDER BY \n    LC_ExgIndustry.FirstIndustryCode, \n    SecuMain.AbbName\nLIMIT 10;",
    "SELECT COUNT(*) AS DividendCount, CashDiviRMB / DiviBase AS DividendRatio\nFROM AStockFinanceDB.LC_Dividend\nWHERE InnerCode = (SELECT InnerCode FROM AStockFinanceDB.SecuMain WHERE SecuName = '华夏鼎康债券A')\n  AND YEAR(EndDate) = 2019\n  AND IfDividend = 1;",
    "SELECT ActualCashDiviRMB\nFROM AStockFinanceDB.LC_Dividend AS d\nJOIN ConstantDB.SecuMain AS m ON d.InnerCode = m.InnerCode\nWHERE m.ChiName = '华夏鼎康债券A'\nAND d.EventProcedure = 3131 -- 方案实施\nAND YEAR(d.DividendImplementDate) = 2019\nORDER BY d.DividendImplementDate DESC\nLIMIT 1;",
    "SELECT \n    AVG(DistributeTimes) AS AvgDividendTimes,\n    ROUND(AVG(CashDiviRMB / DiviBase), 4) AS AvgDividendRatio\nFROM \n    AStockFinanceDB.LC_Dividend\nWHERE \n    EndDate BETWEEN '2019-01-01' AND '2019-12-31'\n    AND DiviObject = 1 -- Assuming we are only interested in dividends for all shareholders\n    AND IfDividend = 1 -- Only consider records where a dividend was actually distributed\n    AND InnerCode IN (\n        SELECT \n            InnerCode\n        FROM \n            AStockFinanceDB.LC_Dividend\n        WHERE \n            EndDate BETWEEN '2019-01-01' AND '2019-12-31'\n            AND DiviObject = 1\n            AND IfDividend = 1\n            AND SchemeType IN (\n                SELECT \n                    DM\n                FROM \n                    AStockFinanceDB.CT_SystemConst\n                WHERE \n                    LB = 1739\n                    AND DM = 10 -- Assuming we are only considering dividends proposed by the company\n            )\n    );",
    "SELECT \n    InfoPublDate AS \"发布日期\",\n    ContractObject AS \"合同标的\",\n    ROUND(AmountInvolved, 2) AS \"合同金额\"\nFROM \n    AStockEventsDB.LC_MajorContract\nWHERE \n    EventSubject = '中铁工业'\n    AND AgreementDate BETWEEN '2021-01-01' AND '2021-12-31'\nORDER BY \n    AmountInvolved DESC\nLIMIT 2;",
    "SELECT \n    CASE \n        WHEN MONTH(AgreementDate) BETWEEN 1 AND 3 THEN '第一季度'\n        WHEN MONTH(AgreementDate) BETWEEN 4 AND 6 THEN '第二季度'\n        WHEN MONTH(AgreementDate) BETWEEN 7 AND 9 THEN '第三季度'\n        WHEN MONTH(AgreementDate) BETWEEN 10 AND 12 THEN '第四季度'\n    END AS '季度',\n    COUNT(*) AS '合同数量'\nFROM \n    AStockEventsDB.LC_MajorContract\nWHERE \n    YEAR(AgreementDate) = 2021\n    AND EventSubject = '1' -- 假设中铁工业的事件主体代码为'1'\nGROUP BY \n    CASE \n        WHEN MONTH(AgreementDate) BETWEEN 1 AND 3 THEN '第一季度'\n        WHEN MONTH(AgreementDate) BETWEEN 4 AND 6 THEN '第二季度'\n        WHEN MONTH(AgreementDate) BETWEEN 7 AND 9 THEN '第三季度'\n        WHEN MONTH(AgreementDate) BETWEEN 10 AND 12 THEN '第四季度'\n    END;",
    "SELECT \n    COUNT(*) AS repeat_transactions_count,\n    SUM(AmountInvolved) AS total_amount,\n    ROUND((SUM(AmountInvolved) / (SELECT SUM(AmountInvolved) FROM AStockEventsDB.LC_MajorContract WHERE AgreementDate BETWEEN '2021-01-01' AND '2021-12-31') * 100, 2) AS total_amount_percentage\nFROM \n    AStockEventsDB.LC_MajorContract\nWHERE \n    AgreementDate BETWEEN '2021-01-01' AND '2021-12-31'\n    AND ObjectName IN (\n        SELECT ObjectName\n        FROM AStockEventsDB.LC_MajorContract\n        WHERE AgreementDate BETWEEN '2021-01-01' AND '2021-12-31'\n        GROUP BY ObjectName\n        HAVING COUNT(*) > 1\n    );\n\nSELECT \n    ObjectName,\n    SUM(AmountInvolved) AS total_amount,\n    ROUND((SUM(AmountInvolved) / (SELECT SUM(AmountInvolved) FROM AStockEventsDB.LC_MajorContract WHERE AgreementDate BETWEEN '2021-01-01' AND '2021-12-31') * 100, 2) AS total_amount_percentage\nFROM \n    AStockEventsDB.LC_MajorContract\nWHERE \n    AgreementDate BETWEEN '2021-01-01' AND '2021-12-31'\nGROUP BY \n    ObjectName\nORDER BY \n    total_amount DESC\nLIMIT 1;",
    "SELECT EventDate, EventName, EmotionDirection\nFROM InstitutionDB.PS_NewsSecurity\nWHERE CompanyCode = (SELECT CompanyCode FROM EP_CompanyMain WHERE CompanyName = '华峰化学')\nAND YEAR(EventDate) = 2019;",
    "SELECT \n    AStockEventsDB.LC_SuspendResumption.SuspendDate AS StartDate, \n    AStockEventsDB.LC_SuspendResumption.ResumptionDate AS EndDate, \n    AStockEventsDB.LC_SuspendResumption.SuspendReason AS Reason\nFROM \n    AStockEventsDB.LC_SuspendResumption\nWHERE \n    AStockEventsDB.LC_SuspendResumption.InnerCode = (SELECT SecuMain.InnerCode FROM SecuMain WHERE SecuMain.CompanyName = '华峰化学')\n    AND AStockEventsDB.LC_SuspendResumption.SuspendDate IS NOT NULL\n    AND AStockEventsDB.LC_SuspendResumption.ResumptionDate IS NOT NULL;",
    "SELECT \n    A.TranDate,\n    A.PCTBeforeTran AS '变动前持股比例',\n    A.PCTAfterTran AS '变动后持股比例',\n    B.变动前后5个交易日累计涨跌幅\nFROM \n    AStockShareholderDB.LC_ShareTransfer A\nJOIN \n    (SELECT \n        CompanyCode, \n        TranDate, \n        CAST(SUM(CAST(变动前后5个交易日累计涨跌幅 AS DECIMAL)) AS DECIMAL(10,2)) AS '变动前后5个交易日累计涨跌幅'\n     FROM \n        AStockShareholderDB.LC_ShareTransfer\n     WHERE \n        TranDate BETWEEN '2019-01-01' AND '2019-12-31'\n     GROUP BY \n        CompanyCode, \n        TranDate) B ON A.CompanyCode = B.CompanyCode AND A.TranDate = B.TranDate\nWHERE \n    A.TranDate BETWEEN '2019-01-01' AND '2019-12-31'\n    AND A.PCTOfTansferer = (SELECT MAX(PCTOfTansferer) FROM AStockShareholderDB.LC_ShareTransfer WHERE TranDate BETWEEN '2019-01-01' AND '2019-12-31')",
    "SELECT \n    ROUND((TotalLiability / TotalAssets), 2) AS DebtRatio,\n    ROUND((TotalCurrentAssets / TotalAssets), 2) AS CurrentAssetsRatio,\n    ROUND((TotalNonCurrentAssets / TotalAssets), 2) AS NonCurrentAssetsRatio\nFROM \n    AStockFinanceDB.LC_BalanceSheetAll\nWHERE \n    CompanyCode = (SELECT CompanyCode FROM SecuMain WHERE ShortName = '大北农')\n    AND EndDate = '2019-03-31'\n    AND IfAdjusted = '6' -- 第一季度末调整\n    AND IfMerged = '1' -- 合并报表\n    AND AccountingStandards = '1' -- 新会计准则",
    "SELECT\n    SUM(LC_Warrant.FirstGuaranteeSum) AS TotalGuaranteeAmount,\n    MAX(LC_Warrant.GuaranteeTerm) AS MaxGuaranteeTerm\nFROM\n    AStockEventsDB.LC_Warrant\nWHERE\n    LC_Warrant.EventSubject = 2 -- 子公司\n    AND LC_Warrant.InfoPublDate BETWEEN '2019-01-01' AND '2019-12-31'\n    AND LC_Warrant.GuaranteeTerm IS NOT NULL\n    AND LC_Warrant.FirstGuaranteeSum IS NOT NULL\nGROUP BY\n    LC_Warrant.CompanyCode",
    "SELECT\n    LC_SMAttendInfo.MeetingDate AS '股东大会召开日期',\n    ROUND(LC_SMAttendInfo.ShareARatio, 2) AS 'A股股东代表股份占比',\n    ROUND(LC_SMAttendInfo.HSharesRatio, 2) AS 'H股股东代表股份占比',\n    ROUND(LC_SMAttendInfo.OtherSharesRatio, 2) AS '其他基础股票股东代表股份占比',\n    ROUND(LC_SMAttendInfo.ShareARatio, 2) AS 'A类普通股股东代表股份比例',\n    ROUND(LC_SMAttendInfo.ShareBRatio, 2) AS 'B类普通股股东代表股份比例'\nFROM\n    AStockEventsDB.LC_SMAttendInfo\nWHERE\n    LC_SMAttendInfo.CompanyCode = (SELECT CompanyCode FROM AStockFinanceDB.LC_BalanceSheetAll WHERE Year = 2019 LIMIT 1)\n    AND LC_SMAttendInfo.MeetingDate BETWEEN '2019-01-01' AND '2019-12-31'\nORDER BY\n    LC_SMAttendInfo.MeetingDate DESC\nLIMIT 10;",
    "SELECT \n    COUNT(*) AS buyback_count,\n    ROUND(SUM(ba.BuybackFunds), 2) AS total_buyback_amount\nFROM \n    AStockShareholderDB.LC_Buyback AS b\nJOIN \n    AStockShareholderDB.LC_BuybackAttach AS ba ON b.ID = ba.BuybackID\nWHERE \n    b.CompanyCode = '梅花生物' AND\n    b.FirstPublDate >= '2019-01-01' AND\n    b.FirstPublDate < '2020-01-01';",
    "SELECT MAX(RepurchaseAmount) AS MaxAmount, RepurchaseDate\nFROM AStockBasicInfoDB.LC_StockArchives\nWHERE RepurchaseAmount = (SELECT MAX(RepurchaseAmount) FROM AStockBasicInfoDB.LC_StockArchives);",
    "SELECT \n    ROUND(AVG(DATEDIFF(EndDate, StartDate)), 2) AS AvgDurationDays,\n    ROUND(AVG(BuybackMoney), 2) AS AvgBuybackAmount\nFROM \n    AStockShareholderDB.LC_Buyback\nWHERE \n    StartDate BETWEEN '2019-01-01' AND '2019-12-31';",
    "SELECT \n    ClosePrice,\n    TurnoverVolume,\n    TurnoverRate,\n    ROUND(ClosePrice, 2) AS ClosePriceFormatted,\n    ROUND(TurnoverRate, 2) AS TurnoverRateFormatted\nFROM \n    AStockMarketQuotesDB.QT_DailyQuote\nWHERE \n    TradingDay = '2021-12-24'",
    "SELECT \n    AStockMarketQuotesDB.QT_StockPerformance.TradingDay AS '交易日',\n    AStockMarketQuotesDB.QT_StockPerformance.HighPrice AS '当日最高价',\n    AStockMarketQuotesDB.QT_StockPerformance.HighPriceRW AS '近一周最高价',\n    AStockMarketQuotesDB.QT_StockPerformance.HighPriceRM AS '近一月最高价'\nFROM \n    AStockMarketQuotesDB.QT_StockPerformance\nWHERE \n    AStockMarketQuotesDB.QT_StockPerformance.InnerCode = (SELECT InnerCode FROM AStockMarketQuotesDB.QT_DailyQuote WHERE TradingDay = '2021-12-24')",
    "SELECT \n    a.TradingDay,\n    a.ClosePrice,\n    a.TurnoverVolume,\n    a.TurnoverRate,\n    b.IfHighestHPriceRW,\n    b.IfHighestHPriceRM,\n    b.MAverageArrangements\nFROM \n    AStockMarketQuotesDB.QT_DailyQuote a\nJOIN \n    AStockMarketQuotesDB.CS_StockPatterns b ON a.InnerCode = b.InnerCode AND a.TradingDay = b.TradingDay\nWHERE \n    a.InnerCode = '指定的证券内部编码' AND\n    a.TradingDay = '2021-12-24'",
    "SELECT \n    MAX(HighPrice) AS MaxPrice,\n    MIN(LowPrice) AS MinPrice,\n    TradingDay AS MaxVolumeDay\nFROM \n    AStockMarketQuotesDB.QT_DailyQuote\nWHERE \n    TradingDay BETWEEN '2019-01-01' AND '2019-03-31'\nGROUP BY \n    TradingDay\nORDER BY \n    TurnoverVolume DESC\nLIMIT 1;",
    "SELECT\n    MAX(DailyQuote.TradingDay) AS MaxVolumeDay,\n    CASE\n        WHEN DailyQuote.HighPrice > Performance.HighPriceRW THEN '近一周新高'\n        WHEN DailyQuote.HighPrice > Performance.HighPriceRM THEN '近一月新高'\n        WHEN DailyQuote.HighPrice > Performance.HighPriceTM THEN '近一季度新高'\n        ELSE '无新高'\n    END AS NewHigh\nFROM\n    AStockMarketQuotesDB.QT_DailyQuote AS DailyQuote\nJOIN\n    AStockMarketQuotesDB.QT_StockPerformance AS Performance ON DailyQuote.InnerCode = Performance.InnerCode\nWHERE\n    DailyQuote.TurnoverVolume = (\n        SELECT MAX(TurnoverVolume)\n        FROM AStockMarketQuotesDB.QT_DailyQuote\n        WHERE TradingDay >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR)\n    )\nAND\n    DailyQuote.TradingDay BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 1 WEEK) AND CURRENT_DATE\nAND\n    Performance.TradingDay BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 1 WEEK) AND CURRENT_DATE\nAND\n    Performance.TradingDay BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) AND CURRENT_DATE\nAND\n    Performance.TradingDay BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 1 QUARTER) AND CURRENT_DATE\nGROUP BY\n    DailyQuote.InnerCode",
    "WITH MonthlyData AS (\n    SELECT\n        TradingDay,\n        TurnoverVolume,\n        ClosePrice,\n        LAG(ClosePrice) OVER (ORDER BY TradingDay) AS PrevDayClosePrice\n    FROM\n        AStockMarketQuotesDB.QT_DailyQuote\n    WHERE\n        TradingDay BETWEEN '2019-01-01' AND '2019-01-31'\n),\nMonthlyAverage AS (\n    SELECT\n        AVG(TurnoverVolume) AS AvgVolume\n    FROM\n        MonthlyData\n)\nSELECT\n    MD.TradingDay,\n    MD.TurnoverVolume,\n    ROUND((MD.TurnoverVolume / MA.AvgVolume) * 100, 2) AS VolumePercentage,\n    ROUND(((MD.ClosePrice - MD.PrevDayClosePrice) / MD.PrevDayClosePrice) * 100, 2) AS PriceChangePercentage\nFROM\n    MonthlyData MD,\n    MonthlyAverage MA\nWHERE\n    MD.TurnoverVolume > 2 * MA.AvgVolume;",
    "SELECT \n    FPSHName, \n    ReceiverName, \n    MAX(PCTOfTotalShares) AS MaxPledgeRatio, \n    InvolvedSum, \n    PCTOfTotalShares\nFROM \n    AStockShareholderDB.LC_ShareFP\nWHERE \n    InfoPublDate BETWEEN '2019-01-01' AND '2019-12-31'\n    AND TypeSelect = 3\nGROUP BY \n    FPSHName, \n    ReceiverName, \n    InvolvedSum, \n    PCTOfTotalShares\nORDER BY \n    MaxPledgeRatio DESC\nLIMIT 1;",
    "SELECT ROUND(AStockFinanceDB.LC_BalanceSheetAll.ShortTermLoan, 2) AS ShortTermLoanBalance\nFROM AStockFinanceDB.LC_BalanceSheetAll\nWHERE AStockFinanceDB.LC_BalanceSheetAll.InfoPublDate = (\n    SELECT MAX(AStockShareholderDB.LC_ShareFP.InfoPublDate)\n    FROM AStockShareholderDB.LC_ShareFP\n    WHERE AStockShareholderDB.LC_ShareFP.TypeSelect = 3\n    AND AStockShareholderDB.LC_ShareFP.PCTOfTotalShares = (\n        SELECT MAX(AStockShareholderDB.LC_ShareFP2.PCTOfTotalShares)\n        FROM AStockShareholderDB.LC_ShareFP AS LC_ShareFP2\n        WHERE LC_ShareFP2.TypeSelect = 3\n    )\n)\nAND AStockFinanceDB.LC_BalanceSheetAll.CompanyCode = (\n    SELECT CompanyCode\n    FROM AStockShareholderDB.LC_ShareFP\n    WHERE AStockShareholderDB.LC_ShareFP.TypeSelect = 3\n    AND AStockShareholderDB.LC_ShareFP.PCTOfTotalShares = (\n        SELECT MAX(AStockShareholderDB.LC_ShareFP2.PCTOfTotalShares)\n        FROM AStockShareholderDB.LC_ShareFP AS LC_ShareFP2\n        WHERE LC_ShareFP2.TypeSelect = 3\n    )\n)",
    "SELECT \n    COUNT(*) AS TotalPledges, \n    SUM(InvolvedSum) AS TotalPledgeAmount, \n    ROUND((SUM(InvolvedSum) / TotalAssets) * 100, 2) AS RatioToTotalAssets\nFROM \n    AStockShareholderDB.LC_ShareFP AS ShareFP\nJOIN \n    AStockFinanceDB.LC_BalanceSheetAll AS BalanceSheet\nON \n    ShareFP.CompanyCode = BalanceSheet.CompanyCode\nWHERE \n    ShareFP.InfoPublDate BETWEEN '2019-01-01' AND '2019-12-31'\n    AND ShareFP.TypeSelect = 3 -- Equity Pledge\n    AND BalanceSheet.EndDate = '2019-12-31'",
    "SELECT \n  COUNT(*) AS ActivityCount,\n  MAX(ParticipantCount) AS MaxParticipantCount,\n  ReceptionDate AS MaxParticipantDate\nFROM (\n  SELECT \n    ReceptionDate,\n    COUNT(DISTINCT Participant) AS ParticipantCount\n  FROM \n    AStockEventsDB.LC_InvestorRa\n  WHERE \n    YEAR(ReceptionDate) = 2019 AND MONTH(ReceptionDate) = 1\n  GROUP BY \n    ReceptionDate\n) AS SubQuery\nWHERE \n  ParticipantCount = (SELECT MAX(ParticipantCount) FROM (\n    SELECT \n      COUNT(DISTINCT Participant) AS ParticipantCount\n    FROM \n      AStockEventsDB.LC_InvestorRa\n    WHERE \n      YEAR(ReceptionDate) = 2019 AND MONTH(ReceptionDate) = 1\n    GROUP BY \n      ReceptionDate\n  ) AS SubQueryMax)\nLIMIT 1;",
    "SELECT\n    AStockOperationsDB.LC_RewardStat.TotalYearPay AS CurrentYearPay,\n    (SELECT TotalYearPay FROM AStockOperationsDB.LC_RewardStat WHERE EndDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 YEAR) AND CURDATE() ORDER BY EndDate DESC LIMIT 1) AS LastYearPay,\n    ROUND((AStockOperationsDB.LC_RewardStat.TotalYearPay - (SELECT TotalYearPay FROM AStockOperationsDB.LC_RewardStat WHERE EndDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 YEAR) AND CURDATE() ORDER BY EndDate DESC LIMIT 1)) / (SELECT TotalYearPay FROM AStockOperationsDB.LC_RewardStat WHERE EndDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 YEAR) AND CURDATE() ORDER BY EndDate DESC LIMIT 1) * 100, 2) AS ChangeRatio\nFROM\n    AStockOperationsDB.LC_RewardStat\nWHERE\n    AStockOperationsDB.LC_RewardStat.EndDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 YEAR) AND CURDATE()\nORDER BY\n    AStockOperationsDB.LC_RewardStat.EndDate DESC\nLIMIT 1;",
    "SELECT \n    A.ConceptCode,\n    ROUND(AVG(B.TotalYearPay / B.NumPayManagers), 2) AS AvgManagerSalary,\n    COUNT(DISTINCT C.InfoPublDate) AS InvestorRelationFrequency\nFROM \n    AStockIndustryDB.LC_COConcept A\nJOIN \n    AStockShareholderDB.LC_RewardStat B ON A.InnerCode = B.CompanyCode\nJOIN \n    AStockEventsDB.LC_InvestorRa C ON A.InnerCode = C.InnerCode\nWHERE \n    YEAR(B.InfoPublDate) = 2021 AND\n    YEAR(C.InfoPublDate) = 2021 AND\n    A.IndiState = 1\nGROUP BY \n    A.ConceptCode;",
    "SELECT \n    AStockBasicInfoDB.LC_StockArchives.AStockCode AS 'A股证券代码',\n    AStockBasicInfoDB.LC_StockArchives.ChiName AS '中文名称',\n    AStockShareholderDB.LC_ShareStru.TotalShares AS '总股本',\n    ROUND((AStockShareholderDB.LC_ShareStru.RestrictedAFloatShares / AStockShareholderDB.LC_ShareStru.TotalShares) * 100, 2) AS '有限售条件的流通股占比'\nFROM \n    AStockBasicInfoDB.LC_StockArchives\nJOIN \n    AStockShareholderDB.LC_ShareStru ON AStockBasicInfoDB.LC_StockArchives.CompanyCode = AStockShareholderDB.LC_ShareStru.CompanyCode\nWHERE \n    AStockBasicInfoDB.LC_StockArchives.AStockCode = '中直股份' AND\n    AStockShareholderDB.LC_ShareStru.EndDate = '2021-12-31';",
    "SELECT \n    ROUND((DNaturalPersonHolding / TotalShares) * 100, 2) AS DomesticNaturalPersonHoldingPercentage,\n    ROUND((FNaturalPersonHolding / TotalShares) * 100, 2) AS ForeignNaturalPersonHoldingPercentage,\n    ROUND(((DNaturalPersonHolding / TotalShares) - (FNaturalPersonHolding / TotalShares)) * 100, 2) AS DifferencePercentage\nFROM \n    AStockShareholderDB.LC_ShareStru\nWHERE \n    CompanyCode = '中直股份的公司代码' AND\n    EndDate = '2021-12-31';",
    "SELECT\n    A.ConceptCode,\n    AVG(B.RestrictedAFloatShares / B.TotalShares * 100) AS AvgRestrictedSharesPercentage\nFROM\n    AStockShareholderDB.LC_COConcept AS A\nJOIN\n    AStockShareholderDB.LC_ShareStru AS B ON A.InnerCode = B.InnerCode\nWHERE\n    A.IndiState = 1 AND\n    B.EndDate = '2021-12-31'\nGROUP BY\n    A.ConceptCode\nHAVING\n    A.ConceptCode IN (\n        SELECT\n            ConceptCode\n        FROM\n            AStockShareholderDB.LC_COConcept\n        WHERE\n            InnerCode = (SELECT InnerCode FROM AStockShareholderDB.LC_MainSHListNew WHERE SecuCode = '中直股份')\n    )"
]