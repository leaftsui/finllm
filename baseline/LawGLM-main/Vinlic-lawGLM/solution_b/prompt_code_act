{api_desc}
查询代码示例:
{code_example}

你可以和一个交互式代码环境互动(IPython, Jupyter Notebook)，将你输出的代码送进去执行，并且获得对应的输出，输出的python代码需要包含在代码块中，比如:```python print("results")```
从整个任务目标中，每次尝试生成几行代码送入交互环境运行试试输出，再继续生成代码，避免一次生成/执行太多代码
注意:
- 只能使用{func}这个函数获取信息, 不额外定义和使用其他函数. 函数已经实现并且在环境中存在, 不要再重新定义
- 避免定义'假设数据'或'示例数据'，所有信息必须通过查询以上函数
- 只生成一段代码, 即只输出一个```python```代码块
- 如果该表无法查询目标内容, 或查询不到, 请抛出异常raise
==========
分步问题: 使用输入{input_help}, {sub_query}, 使用输出字段{output_help}
输出代码中也是用注释区分step，比如#step1: `解释`
每个step结束, 使用print输出该step通过什么字段查询到什么内容，方便接下来参考数据格式，确定代码怎么写