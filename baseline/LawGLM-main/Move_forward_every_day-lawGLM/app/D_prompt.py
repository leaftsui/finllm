API_MAP = {
    "API1": "通过 [统一社会信用代码] 查询公司名称，返回1条内容 [公司名称]",
    "API2": "通过 [公司名称/公司简称/公司代码] 查询上市公司信息（只有上市公司才有结果），返回1条内容 [公司名称,公司简称,英文名称,关联证券,公司代码,曾用简称,所属市场,所属行业,成立日期,上市日期,法人代表,总经理,董秘,邮政编码,注册地址,办公地址,联系电话,传真,官方网址,电子邮箱,入选指数,主营业务,经营范围,机构简介,每股面值,首发价格,首发募资净额,首发主承销商]",
    "API3": "通过 [公司名称] 查询 公司工商注册信息，返回1条内容 [公司名称,登记状态,统一社会信用代码,法定代表人,注册资本,成立日期,企业地址,联系电话,联系邮箱,注册号,组织机构代码,参保人数,行业一级,行业二级,行业三级,曾用名,企业简介,经营范围]",
    "API4": "通过 [公司名称] 查询和公司有关联的案件列表信息，返回一个列表，列表里每条内容包括 [关联公司,案号,文书类型,原告,被告,原告律师事务所,被告律师事务所,案由,涉案金额,判决结果,审理日期]",
    "API5": "通过 [公司名称] 查询该公司的 [母公司] 信息和母公司对该公司的投资信息等（注意，本API不能查该公司子公司），返回1条内容 [关联上市公司全称,上市公司关系,上市公司参股比例,上市公司投资金额,公司名称]",
    "API6": "通过 [公司名称] 查询该公司的所有 [子公司] 信息和该公司对子公司的投资信息等（查询时需要设置成关联上市公司全称），返回一个列表，列表里每条内容包括 [关联上市公司全称,上市公司关系,上市公司参股比例,上市公司投资金额,公司名称]",
    "API7": "通过 [公司名称] 查询该公司是不是限制高消费对象，返回一个列表，只和限制高消费相关，列表里每条内容包括 [限制高消费企业名称,案号,法定代表人,申请人,涉案金额,执行法院,立案日期,限高发布日期]",
    "API8": "通过 [案号] 查询裁判文书信息，返回1条内容 [关联公司,标题,案号,文书类型,原告,被告,原告律师事务所,被告律师事务所,案由,涉案金额,判决结果,日期]",
    "API9": "通过 [案号] 获得法律文书的文本摘要，返回1条内容 [文件名,案号,文本摘要]",
    "API18": "通过 [案号] 查询法院名称，返回1条内容 [案号,法院代字,法院名称]",
    "API10": "通过 [法院名称/法院代字] 查询法院行政级别等信息，返回1条内容 [法院名称,行政级别,法院级别,法院代字,区划代码,级别]",
    "API11": "通过 [法院名称] 查询法院基础信息，返回1条内容 [法院名称,法院负责人,成立日期,法院地址,法院联系电话,法院官网]",
    "API12": "通过 [律师事务所名称] 查询律所注册信息，返回1条内容 [律师事务所名称,律师事务所唯一编码,律师事务所负责人,事务所注册资本,事务所成立日期,律师事务所地址,通讯电话,通讯邮箱,律所登记机关]",
    "API13": "通过 [律师事务所名称] 查询律所业务信息，返回1条内容 [律师事务所名称,业务量排名,服务已上市公司,报告期间所服务上市公司违规事件,报告期所服务上市公司接受立案调查]",
    "API14": "通过 [地址] 查询对应的省份、城市、区县，返回1条内容 [地址,省份,城市,区县]",
    "API15": "通过 [省份+城市+区县]（限制为中文） 查询对应的区划代码，返回1条内容 [省份,城市,城市区划代码,区县,区县区划代码]",
    "API16": "通过 [省份+城市+日期]（限制为中文，日期必须具体到日，X年X月X日格式） 查询对应的天气信息，返回1条内容 [日期,省份,城市,天气,最高温度,最低温度,湿度]",
    "API17": "通过 [案号] 查询裁判文书信息，返回1条内容 [限制高消费企业名称,案号,法定代表人,申请人,涉案金额,执行法院,立案日期,限高发布日期](注意，此案号比较特殊，案号里一定会有'执'字，表示执行的意思。)",
    "API17_1": "适用于 [公民起诉公民]：生成民事起诉状文书，XXX人起诉XXX人，返回 [起诉状文书内容]",
    "API17_2": "适用于 [公司起诉公民]：生成民事起诉状文书，XXX公司起诉XXX人，返回 [起诉状文书内容]",
    "API17_3": "适用于 [公民起诉公司]：生成民事起诉状文书，XXX人起诉XXX公司，返回 [起诉状文书内容]",
    "API17_4": "适用于 [公司起诉公司]：生成民事起诉状文书，XXX公司起诉XXX公司，返回 [起诉状文书内容]",
}

API_TOOL_MAP = {
    "API1": "get_company_register_name",
    "API2": "get_company_info",
    "API3": "get_company_register",
    "API4": "get_legal_document_list",
    "API5": "get_sub_company_info",
    "API6": "get_sub_company_info_list",
    "API7": "get_xzgxf_info_list",
    "API8": "get_legal_document",
    "API9": "get_legal_abstract",
    "API10": "get_court_code",
    "API11": "get_court_info",
    "API12": "get_lawfirm_info",
    "API13": "get_lawfirm_log",
    "API14": "get_address_info",
    "API15": "get_address_code",
    "API16": "get_temp_info",
    "API17": "get_xzgxf_info",
    "API17_1": "get_citizens_sue_citizens",
    "API17_2": "get_company_sue_citizens",
    "API17_3": "get_citizens_sue_company",
    "API17_4": "get_company_sue_company",
    "API18": "get_court_name",
}


SPECIFIC_API_CHOOSE_TASK_PROMPT = """
请根据问题，以及可查询的api，明确思考步骤，和需要使用的API信息: 
问题: {question}

说明: 求解的问题核心是要提炼出关键的操作步骤，确定各个主体对象之间的联系，然后根据可查询的API，将问题拆解成一个个子任务。
特别注意：API查询不支持条件筛选功能，会返回所有结果。
----
已知可查询API如下: (注意查询条件)

API1: 通过 [统一社会信用代码] 查询公司名称，返回1条内容 [公司名称]（统一社会信用代码不是中文，是由数字和大写字母组成的一串代码）

API8: 通过 [案号] 查询裁判文书信息，返回1条内容 [关联公司,标题,案号,文书类型,原告,被告,原告律师事务所,被告律师事务所,案由,涉案金额,判决结果,审理日期]

API2: 通过 [公司名称/公司简称/公司代码] 查询上市公司信息（只有上市公司才有结果），返回1条内容 [公司名称,公司简称,英文名称,关联证券,公司代码,曾用简称,所属市场,所属行业,成立日期,上市日期,法人代表,总经理,董秘,邮政编码,注册地址,办公地址,联系电话,传真,官方网址,电子邮箱,入选指数,主营业务,经营范围,机构简介,每股面值,首发价格,首发募资净额,首发主承销商]

API9: 通过 [案号] 获得法律文书的文本摘要，返回1条内容 [文件名,案号,文本摘要]

API3: 通过 [公司名称] 查询 公司工商注册信息，返回1条内容 [公司名称,登记状态,统一社会信用代码,法定代表人,注册资本,成立日期,企业地址,联系电话,联系邮箱,注册号,组织机构代码,参保人数,行业一级,行业二级,行业三级,曾用名,企业简介,经营范围]

API10: 通过 [法院名称/法院代字] 查询法院行政级别等信息，返回1条内容 [法院名称,行政级别,法院级别,法院代字,区划代码,级别] 

API4: 通过 [公司名称] 查询和公司有关联的所有案件列表信息，返回一个列表，列表里每条内容包括 [关联公司,案号,文书类型,原告,被告,原告律师事务所,被告律师事务所,案由,涉案金额,判决结果,审理日期]

API11: 通过 [法院名称] 查询法院基础信息，返回1条内容 [法院名称,法院负责人,成立日期,法院地址,法院联系电话,法院官网]

API5: 通过 [公司名称] 查询该公司的 [母公司] 信息和母公司对该公司的投资信息等（注意，本API不能查该公司子公司），返回1条内容 [关联上市公司全称,上市公司关系,上市公司参股比例,上市公司投资金额,公司名称]

API12: 通过 [律师事务所名称] 查询律所注册信息，返回1条内容 [律师事务所名称,律师事务所唯一编码,律师事务所负责人,事务所注册资本,事务所成立日期,律师事务所地址,通讯电话,通讯邮箱,律所登记机关]

API6: 通过 [公司名称] 查询该公司的所有 [子公司] 信息和该公司对子公司的投资信息等（查询时需要设置成关联上市公司全称），返回一个列表，列表里每条内容包括 [关联上市公司全称,上市公司关系,上市公司参股比例,上市公司投资金额,公司名称]

API14: 通过 [详细地址] 查询对应的省份、城市、区县，返回1条内容 [地址,省份,城市,区县]

API13: 通过 [律师事务所名称] 查询律所业务信息，返回1条内容 [律师事务所名称,业务量排名,服务已上市公司,报告期间所服务上市公司违规事件,报告期所服务上市公司接受立案调查]

API15: 通过 [省份+城市+区县] 查询对应的区划代码，返回1条内容 [省份,城市,城市区划代码,区县,区县区划代码]

API7: 通过 [公司名称] 查询案号关联公司是不是限制高消费对象，返回一个列表，只和限制高消费相关，列表里每条内容包括 [限制高消费企业名称,案号,法定代表人,申请人,涉案金额,执行法院,立案日期,限高发布日期]

API16: 通过 [省份+城市+日期] （日期具体到日，X年X月X日格式）查询对应的天气信息，返回1条内容 [日期,省份,城市,天气,最高温度,最低温度,湿度]

API18: 通过 [案号] 查询法院名称，返回1条内容 [案号,法院代字,法院名称]

----
请根据问题，以及可查询的api，确定要执行哪些API，以及API的执行顺序。
请详细思考各个步骤的关联性，再决定查询哪些API。
----
例子: 
问题: XXX公司立案时间在2020年且作为被告的案件中涉案金额小于100万大于1万的案号分别为？
{{
    "思考步骤": "可以通过XXX公司名称查询公司所有涉案列表，再筛选立案时间在2020年且XXX公司是被告且涉案金额小于100万大于1万的案件，找到案号。",
    "API": ["API4"]
}}

问题: 91320722MA27RF9U87这家公司被投资了多少万
{{
    "思考步骤": "可以通过统一社会信用代码91320722MA27RF9U87查询公司名称，再通过公司名称查询其母公司信息，从中确定被投资金额。",
    "API": ["API1", "API5"]
}}

问题：(2021)苏0481民初4582号的法院在哪个区县？
{{
    "思考步骤": "先根据案号(2021)苏0481民初4582号查询法院名称，再通过法院名称查询法院地址获得区县信息。",
    "API": ["API18", "API11"]
}}

问题：原告300674的案件中，被告律师事务所的联系方式是什么？
{{
    "思考步骤": "可以通过公司代码300674查询公司名称，再通过公司名称查询公司涉案列表，再筛选出该公司作为原告的案件，再找到被告律师事务所名称，再通过律所名称查询律所联系方式。",
    "API": ["API2", "API4", "API12"]
}}

问题: (2021)冀0207民初6756号的被告公司2021年涉案金额最高的法院的负责人是？
{{
    "思考步骤": "可以通过案号(2021)冀0207民初6756号查询法律文书信息，获得被告公司名称，再通过公司名称查询该公司所有涉案列表，再选出2021年涉案金额最高的案件，从中找到案号，通过案号查询法院名称，再通过法院名称查询负责人",
    "API": ["API8", "API4", "API18", "API11"]
}}

问题：(2020)浙0483民初2668号的法院在哪个区县？
{{
    "思考步骤": "先从案号(2020)浙0483民初2668号查询法院名称，再通过法院名称查询法院地址获得区县信息。",
    "API": ["API18", "API11"]
}}

问题: 山东潍坊润丰化工股份有限公司投资金额最高的子公司与投资最低的子公司注册地址所在城市分别是？
{{
    "思考步骤": "可以通过公司名称山东潍坊润丰化工股份有限公司查询所有子公司信息，从中找到投资金额最高和最低的子公司，再通过子公司名称查询注册地址，再根据注册地址查询省份、城市和区县信息",
    "API": ["API6", "API3", "API14"]
}}

问题: (2019)京0101民初11731号案件中，审理当天审理法院与原告的律师事务所所在城市的最低温度相差多少度？
{{
    "思考步骤": "可以先通过案号(2019)京0101民初11731号查询审理日期、案号和原告律师事务所名称，再通过案号查询审理法院名称，再通过法院名称查询法院地址，再通过原告律师事务所名称查询律师地址，再根据法院地址和律师地址结合审理日期查询两地的天气，最后总结两地的最低气温差值。",
    "API": ["API8", "API18", "API11", "API12", "API16"]
}}

----
请按照以下json格式进行输出，可以被Python json.loads函数解析。不回答问题，不作任何解释，不输出其他任何信息。
```json
{{
    "思考步骤": "",
    "API": []
}}
``` 
""".strip()


SUB_TASK_PROMPT_FILTER = """
请根据任务要求，判断该任务有几个筛选条件，如果只有一个筛选条件，直接返回结果，如果有多个筛选条件，请对筛选条件进行拆分: 
任务: {question}

----
注意事项: 
1. 一个子任务只能有一个筛选条件，不能有多个筛选条件。不能涉及排序操作。

----
例子: 
问题: 给定案件列表，筛选2020年立案的案件。（只有1个筛选条件）
[
    {{
        "子任务": "给定案件列表，筛选2020年立案的的案件。", 
        "操作": "筛选"
    }}
]


问题: 给定案件列表，筛选2020年立案该公司是被投诉人且涉案金额大于1万小于100万的案件。（有多个筛选条件）
[
    {{
        "子任务": "给定案件列表，筛选2020年立案的的案件。",
        "操作": "筛选"
    }},
    {{
        "子任务": "给定案件列表，筛选该公司是被投诉人的案件。",
        "操作": "筛选"
    }},
    {{
        "子任务": "给定案件列表，筛选涉案金额大于1万的案件。",
        "操作": "筛选"
    }},
    {{
        "子任务": "给定案件列表，筛选涉案金额小于100万的案件。",
        "操作": "筛选"
    }}
]

问题: 给定公司列表，筛选投资金额大于1亿的全资子公司。（有多个筛选条件）
[
    {{
        "子任务": "给定公司列表，筛选投资金额大于1亿的公司。",
        "操作": "筛选"
    }},
    {{
        "子任务": "给定公司列表，筛选全资子公司。",
        "操作": "筛选"
    }}
]

----
请按照以下json格式进行输出，可以被Python json.loads函数解析。不回答问题，不作任何解释，不输出其他任何信息。
```json
[
    {{
        "子任务": "",
        "操作": ""
    }}
]
``` 
""".strip()


TEST_CHOOSE_TASK_PROMPT_SIMPLE = """
请根据问题，以及可供查询的api，将目标拆解成一个个子任务: 
问题: {question}

解题思路: {solution}

applist：（可供查询的api信息；特别注意查询条件和返回内容）
{api_list}

----
api_list详细说明: 
{api_list_info}

----
操作：

类型1：一般内容操作：

1. API查询: 根据可供查询的api信息，进行相应api查询，不支持条件筛选，会返回所有结果（必须写明代号，如API4）。

2. 提取：从已查询的信息中提取出答案。

3. 总结: 给定操作结果，总结答案；或者从已查询的信息中找出答案。


类型2：列表内容操作（只针对列表数据生效）

4. 列表API查询:【列表操作】 给定一个列表，对列表里的每一条记录都进行查询API（比如写明代号，如列表API4）。

5. 筛选: 【列表操作】给定一个列表，根据问题中的筛选条件进行筛选（没有排序功能）。

6. 排序: 【列表操作】给定一个列表，根据排序属性进行排序，比如投资金额或者涉案金额或者法院等级。（排序后必有索引步骤）

7. 索引：【列表操作】给定一个列表，对排序后的结果进行索引，找到结果，比如选投资金额最大的公司或者涉案金额第二高的案件。(依赖排序结果)

8. 计数: 【列表操作】给定一个列表，计算列表内容的数量。

9. 求和: 【列表操作】给定一个列表，对某项属性进行求和，比如涉案金额、投资总额等。

10. 分布统计：【列表操作】给定一个列表，对某项属性分布进行统计，比如统计案件数量中立案最多的年份、最多的案由等。

----
注意事项: 
1. 请按照解题思路，将问题拆解成多个子任务；第一个步骤必须是API查询。

2. 子任务中，如果涉及API查询/列表API查询，必须明确API代号/列表API代号，API查询时不支持条件筛选功能，会返回所有结果。

3. 一个子任务只能完成一个操作，只能做一次查询/筛选/计数等；如果需要多个操作，需要拆分成多个子任务。

4. 排序和索引不能单独出现，或者都不出现，或者先后出现，排序步骤后必须有索引步骤。

5. 提供的api_list里的api尽可能都在子任务中出现。

----
例子: 
问题: 统一社会信用代码是913310007200456372这家公司的法人是谁？
解题思路: 可以通过统一社会信用代码查询公司名称，再通过公司名称查询公司信息，最后确定公司法人。
api_list: [API1, API3]
[
    {{
        "子任务": "通过统一社会信用代码913310007200456372查询公司名称。",
        "操作": "API1"
    }},
    {{
        "子任务": "根据公司名称，查询公司法人。",
        "操作": "API3"
    }}
]

问题: 伊吾广汇矿业有限公司立案时间在2020年且作为被告的案件中涉案金额小于100万大于1万的案号分别为？
解题思路: 可以通过公司名称查询公司涉案列表，再根据条件，筛选案件，找到案号。
api_list: [API4]
[
    {{
        "子任务": "查询伊吾广汇矿业有限公司的案件列表",
        "操作": "API4"
    }},
    {{
        "子任务": "根据案件列表，筛选立案时间在2020年的案件",
        "操作": "筛选"
    }},
    {{
        "子任务": "根据案件列表，筛选该公司作为被告的案件",
        "操作": "筛选"
    }},
    {{
        "子任务": "根据案件列表，筛选涉案金额小于100万的案件",
        "操作": "筛选"
    }},
    {{
        "子任务": "根据案件列表，筛选涉案金额大于1万的案件",
        "操作": "筛选"
    }},
    {{
        "子任务": "根据案件列表，提取出案号",
        "操作": "提取"
    }}
]

问题: 91320722MA27RF9U87这家公司被投资了多少万
解题思路: 可以通过统一社会信用代码查询公司名称，再通过公司名称查询其母公司信息，从中确定被投资金额。
api_list: [API1, API5]
[
    {{
        "子任务": "根据91320722MA27RF9U87查询公司名称",
        "操作": "API1"
    }},
    {{
        "子任务": "根据公司名称查询母公司信息以及被投资金额信息",
        "操作": "API5"
    }}
]


问题: 2020年11月6日新疆维吾尔自治区吐鲁番市天气如何？最高温度是多少？
解题思路: 根据日期、地点查询天气，再根据天气信息，确定天气情况如何，并确定最高温度。
api_list: [API16]
[
    {{
        "子任务": "根据日期、地点查询天气。",
        "操作": "API16"
    }},
    {{
        "子任务": "根据天气信息，确定天气情况如何，并确定最高温度。",
        "操作": "总结"
    }}
]

问题: 爱玛科技集团股份有限公司涉案金额最高的法院的负责人是？
解题思路: 可以通过公司名称查询公司涉案列表，再选出涉案金额最高的案件，从中找到案号，根据案号查询法院名称，再通过法院名称查询负责人
api_list: [API4, API18, API11]
[
    {{
        "子任务": "通过爱玛科技集团股份有限公司查询案件列表",
        "操作": "API4"
    }},
    {{
        "子任务": "根据案件列表，根据涉案金额进行排序，从高到低排序",
        "操作": "排序"
    }},
    {{
        "子任务": "给定已经排序好的案件列表，筛选其中涉案金额最高的案件",
        "操作": "索引"
    }},
    {{
        "子任务": "从案件中提取出案号，并根据案号查询法院名称",
        "操作": "API18"
    }},
    {{
        "子任务": "根据法院名称查询法院负责人",
        "操作": "API11"
    }}
]

问题: 91310000677833266F的公司全称是？该公司的涉案次数为？（起诉日期在2020年）作为被起诉人的次数及总金额为？
解题思路: 可以通过统一社会信用代码91310000677833266F查询公司名称，再通过公司名称查询案件列表，统计案件数量，筛选起诉日期在2020年的案件，筛选该公司是被告的案件，统计次数，对涉案金额求和。
api_list: [API1, API4]
[
    {{
        "子任务": "通过统一社会信用代码91310000677833266F查询公司名称。",
        "操作": "API1"
    }},
    {{
        "子任务": "通过公司名称查询案件列表。",
        "操作": "API4"
    }},
    {{
        "子任务": "统计案件列表总数。",
        "操作": "计数"
    }},
    {{
        "子任务": "根据案件列表，筛选起诉日期在2020年的案件列表。",
        "操作": "筛选"
    }},
    {{
        "子任务": "根据案件列表，筛选作为被告的案件列表。",
        "操作": "筛选"
    }},
    {{
        "子任务": "根据案件列表，统计次数。",
        "操作": "计数"
    }},
    {{
        "子任务": "根据案件列表，对涉案金额求和。",
        "操作": "求和"
    }}
]

问题：金迪克公司的子公司的一级行业是什么？
解题思路：可以通过公司名称查询所有子公司列表信息，再根据列表里所有子公司名称查询一级行业。
api_list: [API6, API3]
[
    {{
        "子任务": "金迪克子公司列表信息。",
        "操作": "API6"
    }},
    {{
        "子任务": "根据子公司列表中的公司名称，查询每个子公司的一级行业。",
        "操作": "列表API3"
    }}
]
----
特别注意：
一个子任务只能完成一个操作，不能有多个操作。只能查询1个API接口。

----
请按照以下json格式进行输出，可以被Python json.loads函数解析。不回答问题，不作任何解释，不输出其他任何信息。
```json
[
    {{
        "子任务": "",
        "操作": ""
    }}
]
``` 
""".strip()


TEST_CHOOSE_TASK_PROMPT_WITHOUT_LIST = """
请根据问题，以及可查询的api，将目标拆解成一个个子任务: 
问题: {question}

解题思路: {solution}

api_list：（可供查询的api信息；特别注意查询条件和返回内容）
{api_list}

----
api_list详细说明: 
{api_list_info}

----
操作: 

1. API查询: 根据api_list中提供的api，进行查询，不支持条件筛选，会返回所有结果。

2. 提取：从已查询的信息中提取出答案。

3. 总结: 给定操作结果，总结答案；或者从已查询的信息中找出答案。

----
注意事项: 
1. 请按照解题思路，将问题拆解成多个子任务；第一个步骤必须是API查询。

2. 子任务中，如果涉及API查询，必须明确API代号，API查询时不支持条件筛选功能，会返回所有结果。

3. 一个子任务只能完成一个操作。

4. 特别注意api_list中的api尽可能都在子任务中出现。

----
例子: 
问题: XXX公司被投资了多少万，投资比例是多少？
解题思路: 可以通过公司名称查询其母公司信息，从中确定被投资金额和投资比例。
api_list: [API5]
[
    {{
        "子任务": "根据公司名称查询母公司信息以及被投资金额和投资比例信息。",
        "操作": "API5"
    }}
]

问题: 统一社会信用代码是913310007200456372这家公司的法人是谁？
解题思路: 可以通过统一社会信用代码查询公司名称，再通过公司名称查询公司信息，最后确定公司法人。
api_list: [API1, API3]
[
    {{
        "子任务": "通过统一社会信用代码913310007200456372查询公司名称。",
        "操作": "API1"
    }},
    {{
        "子任务": "根据公司名称，查询公司法人。",
        "操作": "API3"
    }}
]

问题：(2019)京0101民初11731号案件中，审理当天审理法院与原告的律师事务所所在城市的最低温度相差多少度？
解题思路：可以通过案号查询裁判文书信息，获得审理日期和原告律师事务所名称；再根据案号查询法院名称；根据审理法院名称查询法院地址（省份和城市），结合审理日期，查询天气信息；根据原告律师事务所名称，查询律所地址（省份和城市），再结合审理日期，查询天气信息；最后计算两个城市的最低温度差值。
api_list: [API8, API18, API11, API12, API16]
[
    {{
        "子任务": "通过案号(2019)京0101民初11731号查询裁判文书信息，获取审理日期和原告律师事务所名称。",
        "操作": "API8"
    }},
    {{
        "子任务": "根据案号(2019)京0101民初11731号查询法院名称。",
        "操作": "API18"
    }},
    {{
        "子任务": "根据审理法院名称查询法院地址。",
        "操作": "API11"
    }},
    {{
        "子任务": "根据审理日期、法院地址（省份+城市）查询天气信息。",
        "操作": "API16"
    }},
    {{
        "子任务": "根据原告律师事务所名称查询律所地址。",
        "操作": "API12"
    }},
    {{
        "子任务": "根据审理日期、原告律师事务所地址（省份+城市）查询天气信息。",
        "操作": "API16"
    }},
    {{
        "子任务": "计算两个城市的最低温度差值。",
        "操作": "总结"
    }}
]

----
特别注意：
一个子任务只能完成一个操作，不能有多个操作。只能查询1个API接口。

----
请按照以下json格式进行输出，可以被Python json.loads函数解析。不回答问题，不作任何解释，不输出其他任何信息。
```json
[
    {{
        "子任务": "",
        "操作": ""
    }}
]
``` 
""".strip()


TEST_CHOOSE_TASK_PROMPT_SIMPLE_EXAMPLES = """
请根据问题，以及可供查询的api，将目标拆解成一个个子任务: 
问题: {question}

解题思路: {solution}

applist：（可供查询的api信息；特别注意查询条件和返回内容）
{api_list}

----
api_list详细说明: 
{api_list_info}

----
操作：

类型1：一般内容操作：

1. API查询: 根据可供查询的api信息，进行相应api查询，不支持条件筛选，会返回所有结果。

2. 提取：从已查询的信息中提取出答案。

3. 总结: 给定操作结果，总结答案；或者从已查询的信息中找出答案。


类型2：列表内容操作（只针对列表数据生效）

4. 列表API（必须写明API代号，例如列表API3, 列表API4等）:【列表操作】 给定一个列表，对列表里的每一条记录都进行查询API。

5. 筛选: 【列表操作】给定一个列表，根据问题中的筛选条件进行筛选（没有排序功能）。

6. 排序: 【列表操作】给定一个列表，根据排序属性进行排序，比如投资金额或者涉案金额或者法院等级。（排序后必有索引步骤）

7. 索引：【列表操作】给定一个列表，对排序后的结果进行索引，找到结果，比如选投资金额最大的公司或者涉案金额第二高的案件。(依赖排序结果)

8. 计数: 【列表操作】给定一个列表，计算列表内容的数量。

9. 求和: 【列表操作】给定一个列表，对某项属性进行求和，比如涉案金额、投资总额等。

10. 分布统计：【列表操作】给定一个列表，对某项属性分布进行统计，比如统计案件数量中立案最多的年份、最多的案由等。

----
注意事项: 
1. 请按照解题思路，将问题拆解成多个子任务；第一个步骤必须是API查询。

2. 子任务中，如果涉及API查询/列表API查询，必须明确API代号，API查询时不支持条件筛选功能，会返回所有结果。

3. 一个子任务只能完成一个操作，只能做一次查询/筛选/计数等；如果需要多个操作，需要拆分成多个子任务。

4. 排序和索引不能单独出现，或者都不出现，或者先后出现，排序步骤后必须有索引步骤。

5. 提供的api_list里的api尽可能都在子任务中出现。

----
例子: 
{examples}

----
特别注意：
一个子任务只能完成一个操作，不能有多个操作。只能查询1个API接口。

----
请按照以下json格式进行输出，可以被Python json.loads函数解析。不回答问题，不作任何解释，不输出其他任何信息。
```json
[
    {{
        "子任务": "",
        "操作": ""
    }}
]
``` 
""".strip()


TEST_CHOOSE_TASK_PROMPT_WITHOUT_LIST_EXAMPLES = """
请根据问题，以及可查询的api，将目标拆解成一个个子任务: 
问题: {question}

解题思路: {solution}

api_list：（可供查询的api信息；特别注意查询条件和返回内容）
{api_list}

----
api_list详细说明: 
{api_list_info}

----
操作: 

1. API查询: 根据api_list中提供的api，进行查询，不支持条件筛选，会返回所有结果。（必须写明API代号）。

2. 提取：从已查询的信息中提取出答案。

3. 总结: 给定操作结果，总结答案；或者从已查询的信息中找出答案。

----
注意事项: 
1. 请按照解题思路，将问题拆解成多个子任务；第一个步骤必须是API查询。

2. 子任务中，如果涉及API查询，必须明确API代号，API查询时不支持条件筛选功能，会返回所有结果。

3. 一个子任务只能完成一个操作。

4. 特别注意api_list中的api尽可能都在子任务中出现。

----
例子: 
{examples}

----
特别注意：
一个子任务只能完成一个操作，不能有多个操作。只能查询1个API接口。

----
请按照以下json格式进行输出，可以被Python json.loads函数解析。不回答问题，不作任何解释，不输出其他任何信息。
```json
[
    {{
        "子任务": "",
        "操作": ""
    }}
]
``` 
""".strip()


EVALUATE_API_TASK = """
请分析下面的任务使用对应的API是否可以完成：
任务：{sub_task}

API: {api_info} (注意，查询条件中"/"分隔的条件，只需要满足其中一个条件即可；"+"分隔的条件，需要同时都存在，但是注意顺序不限，只要有即可)

注意API的查询条件和返回结果是否符合任务要求，主体内容对得上就行，只需要判断是否可以使用API完成任务。不需要提供具体的日期或者地址等信息。注意子公司和母公司的区别。
请进行简要分析，并回复 "yes"（可以）或者 "no"（不可以）。
"""


PROMPT = """
我们正在完成一个大问题: 
{big_question}

当前步骤是需要完成下面的子任务: 
{sub_task}

前一步骤的答案是: 
{previous_info}

前面累计的信息是: 
{acc_info}

请重点参考请给出当前步骤子任务的答案（注意要适当考虑回答是否会对大问题有帮助），只需要回答当前步骤子任务的问题: 
{sub_task}

""".strip()


TEST_RETRIEVE_PROMPT2 = """
我们正在完成一个大任务: 
【大问题】{big_question}

目前已经有解决思路: 
{solution}


这个任务被拆解成了多个子任务，当前需要完成的子任务是要查询API获得信息: 
【当前子任务】{sub_task}
【需要查询的API】（注意：查询条件为 {api_info_key}）
{api_info}


{previous_task_info}


----
请根据API的要求，以及当前子任务的问题，确定需要提供的主体信息是什么。

说明: 
1. 你的目标是回答当前子任务的问题，不要关注其它问题。
2. 你需要根据API的查询条件，确定需要提供的主体信息。
3. 主体信息只能在当前的数据中提取，不要假设数据中有其他信息，不要进行其他推理。
4. 案号不是数字，是包含年份、法院代字、编码的一个整体，例如：(2020)皖05民终1584号，(2020)湘0104民初3954号，务必不要分拆。

---
请严格按照以下格式输出：直接输出json，可以被Python json.loads函数解析。不作解释，不作答，直接填写value值(注意，value值必须是字符串类型，可以是多个值)。
```json
[]
```
""".strip()


PREVIOUS_TASK_PROMPT = """
上一个子任务的问题和答案是: 
【上一个子任务】{previous_task}
【上一个子任务答案】{previous_answer}
【上一个子任务传递的信息】{previous_data}


前面累计的历史信息为：
{history_info}

{complex_data}
"""


ORDER_PROMPT = """
分析所给问题，给出排序属性，排序方式（降序或者升序）。
问题: {question}

例子: 
问题: '给定公司列表，对投资金额进行排序，取最高的公司'
{{
    "排序属性": "上市公司投资金额",
    "排序方式": "降序"
}}

问题: '给定案件列表，对涉案金额进行排序，取涉案金额第二高的案件'
{{
    "排序属性": "涉案金额",
    "排序方式": "降序"
}}

问题: '给定案件列表，对涉案金额进行排序，取涉案金额最高的3个案件'
{{
    "排序属性": "涉案金额",
    "排序方式": "降序"
}}

问题：'给定案件列表，找到等级/级别最高的审理法院'
{{
    "排序属性": "法院级别",
    "排序方式": "降序"
}}

----
请按照以下json格式进行输出，可以被Python json.loads函数解析。不回答问题，不作任何解释，不输出其他任何信息。
对于查询类问题，补充原有属性的具体属性名称。
```json
{{
    "排序属性": "",
    "排序方式": ""
}}
```
""".strip()


INDEX_PROMPT = """
分析所给问题，对已经排序好的列表进行索引，给出索引值。
问题: {question}

已知上一步骤的排序属性和排序方式是: {previous_info}

例子: 
问题: 给定公司列表，对投资金额进行排序，取最高的公司
{{
    "索引值": [0]
}}

问题: 给定排序好的案件列表，取涉案金额第二高的案件
{{
    "索引值": [1]
}}

问题: 对排序好的案件列表，取涉案金额最高的3个案件
{{
    "索引值": [0, 1, 2]
}}

----
请按严格照以下json格式进行输出，可以被Python json.loads函数解析。不回答问题，不作任何解释，不输出其他任何信息。
```json
{{
    "索引值": []
}}
```
""".strip()


STAT_ANALYSIS_PROMPT = """
分析所给问题，对属性进行统计分析，给出统计属性。
任务: {question}


前面累计的信息是: 
{history_info}


例子: 
任务: '给定案件列表，统计立案时间最多的年份'
{{
    "统计属性": "年份",
    "统计方式": "最多"
}}

任务: '给定案件列表，统计最多的案由'
{{
    "统计属性": "案由",
    "统计方式": "最多"
}}

----
请按严格照以下json格式进行输出，可以被Python json.loads函数解析。不回答问题，不作任何解释，不输出其他任何信息。
```json
{{
    "统计属性": "",
    "统计方式": ""
}}
```
""".strip()


MULTI_RETRIEVE_PROMPT = """
请根据要查询的api说明，从以下查询选项中找到最接近的选项。
API：
{api_info}
---- 
说明: 查询属性选项如下: {keys}（必须在这几个选项中选择）

----
请按照以下json格式进行输出，可以被Python json.loads函数解析。不回答问题，不作任何解释，不输出其他任何信息。
```json
{{
    "查询选项": ""
}}
```
""".strip()

PRE_FILTER_LIST_PROMPT = """
已知有任务: 
{question}

请判断该任务的筛选条件，从以下选项中选择一个，并输出关键筛选信息: 
【筛选条件】
选项1.案件起诉/立案时间（年份）
选项2.案件审理时间（年份）
选项3.要求涉案金额大于/小于/等于某个值
选项4.作为原告（起诉人）或者被告（被起诉人）
选项5.全资子公司
选项6.要求投资金额大于/小于/等于某个值
选项7.审理法院为XXX法院
选项8.其它筛选条件，不符合上述条件的筛选条件（务必保持简洁）

直接回答选项，不需要回答问题，不需要输出其它信息。
以下为部分示例: 
任务: 给定案件列表，筛选出2020年立案的案件
回答: 选项1,2020

任务: 给定案件列表，筛选出审理时间在发生在2021年的案件
回答: 选项2,2021

任务: 给定案件列表，筛选出有涉案金额的案件
回答: 选项3,大于0

任务: 给定案件列表，筛选出涉案金额小于100万的案件
回答: 选项3,小于100万

任务: 给定案件列表，筛选出xxx作为原告的案件
回答: 选项4,原告

任务: 给定案件列表，筛选出xxx作为被起诉人的案件
回答: 选项4,被告

任务: 给定公司列表，筛选出全资子公司
回答: 选项5,100%

任务: 给定公司列表，筛选出投资金额大于1亿的公司
回答: 选项6,大于1亿

任务: 给定案件列表，筛选出由北京市高级人民法院审理的案件
回答: 选项7,北京市高级人民法院

请直接回答选项，必须严格按照示例进行回答，不需要回答问题，不需要输出其它信息。
任务: {question}
回答: 
"""


FILTER_LIST_PROMPT = """
你正在完成一个大问题，当前步骤是要完成其中的一个子任务: 
【当前子任务】{question}


现在需要对一个列表里的数据进行筛选，已知其中的一项元素信息如下: 
{xdata}


请判断该元素是否符合条件，输出 yes（符合，保留） or no （不符合，不保留），只能输出1个，请直接输出答案。（务必保持简洁）

----
输出示例: 
yes / no
"""


RES_REFINE_PROMPT = """
现在有问题: 
{question}


已经有初步答案: 
{answer}


请根据问题和初步答案，给出更加清晰、完整的回答。回答内容要和问题保持一致，原问题中所有内容都要回答，且一定要保留问题中的主体对象，适当保留中间步骤中的关键主体信息。
基本要求是，要能够根据中间步骤的关键信息，一步步得到最终答案。

例子: 
问题: 某某公司涉案最高的案件审理法院的的负责人是谁？
回答: 某某公司涉案最高的案件是XXX，该案件的审理法院是XXX，该法院的负责人是XXX。

例子: 
问题: 某某公司的子公司中涉案金额最高的案件的案号是多少？
回答: 某某公司子公司是XXX，该子公司中涉案金额最高的案件的案号是XXX，涉案金额是XXX。

例子: 
问题: 某案件中的被告律师事务所地址是？
回答: 某案件中的被告律师事务所是XXX，该律所的地址是XXX。

例子: 
问题: 91310000677833266F的公司全称是？该公司的涉案次数为？（起诉日期在2020年）作为被起诉人的次数及总金额为？
初步答案: 上海晨光文具股份有限公司，该公司在2020年涉案次数为46次，作为被起诉人的次数为45次，总金额为105806元。
回答: 91310000677833266F的公司全称是上海晨光文具股份有限公司，该公司在2020年涉案次数为46次，（起诉日期在2020年）作为被起诉人的次数为45次，总金额为105806元。

例子: 
问题: 上海东方华银律师事务所服务已上市公司的数量是多少家？
初步回答: 根据查询结果，上海东方华银律师事务所服务已上市公司的数量是5家。目前没有获取到具体的服务过的上市公司名称等相关详细信息。
回答: 上海东方华银律师事务所服务已上市公司的数量是5家。

请直接回答问题，不要回答问题之外的内容: 
"""


PROMPT_SUE_TYPE = """
已有有一个问题：
{question}

请根据问题，判断该问题的类型，从以下选项中选择一个，并输出答案。
【问题类型】
选项1. 公民起诉公民
选项2. 公司起诉公民
选项3. 公民起诉公司
选项4. 公司起诉公民
"""


API_EXAMPLES = {
    "API1": [
        """
问题: 机构代码是913310007200456372这家公司的名称是什么？
解题思路: 可以通过统一社会信用代码查询公司名称。
api_list: [API1]
[
    {{
        "子任务": "通过统一社会信用代码913310007200456372查询公司名称。",
        "操作": "API1"
    }}
]
    """.strip(),
        """
问题: 91320722MA27RF9U87这家公司被投资了多少万？
解题思路: 可以通过统一社会信用代码91320722MA27RF9U87查询公司名称，然后通过公司名称获得该公司母公司和被投资信息。
api_list: [API1, API5]
[
    {{
        "子任务": "通过统一社会信用代码91320722MA27RF9U87查询公司名称。",
        "操作": "API1"
    }},
    {{
        "子任务": "通过公司名称查询该公司母公司和被投资信息。",
        "操作": "API5"
    }}
]
    """.strip(),
    ],
    "API2": [
        """
问题: XXX公司是不是上市公司；如果是上市公司，请提供公司简称和公司代码？
解题思路: 可以通过公司名称XX公司查询上市公司信息，如果有返回结果则是上市公司。
api_list: [API2]
[
    {{
        "子任务": "通过公司名称XXX公司查询上市公司信息。",
        "操作": "API2"
    }}
]
    """.strip(),
        """
问题: 与公司代码为688579有关联的案件有哪些？
解题思路: 可以通过公司代码查询上市公司信息，获得公司名称，再通过公司名称查询和该公司有关联的案件。
api_list: [API2, API4]
[
    {{
        "子任务": "通过公司代码688579查询上市公司信息，获得公司名称。",
        "操作": "API2"
    }},
    {{
        "子任务": "通过公司名称查询该公司的涉案信息。",
        "操作": "API4"
    }}
]
    """.strip(),
    ],
    "API3": [
        """
问题: XXX公司的参保人数是多少？负责人是谁？联系电话是多少？
解题思路: 可以通过公司名称XX公司查询该公司工商注册信息，获得参保人、负责人、联系电话信息等。
api_list: [API3]
[
    {{
        "子任务": "通过公司名称XXX公司查询该公司工商注册信息，获得参保人、负责人、联系电话信息。",
        "操作": "API3"
    }}
]
    """.strip(),
        """
问题: XXX公司注册地址的省市区县是什么？
解题思路: 可以通过公司名称XXX公司查询该公司工商注册信息，获得注册地址，再通过公司注册地址查询对应的省市区县信息。
api_list: [API2, API14]
[
    {{
        "子任务": "通过公司名称XXX公司查询该公司工商注册信息，获得注册地址。",
        "操作": "API2"
    }},
    {{
        "子任务": "通过公司注册地址查询对应的省市区县信息。",
        "操作": "API14"
    }}
]
    """.strip(),
    ],
    "API4": [
        """
问题: XXX公司有多少案件？其中在2020年立案，作为被起诉人，且涉案金额最高的案号是？
解题思路: 可以通过公司名称XX公司查询该公司的涉案列表，再筛选出2020年立案的该公司作为被起诉人且涉案金额最高的案件，从中提取出案号。
api_list: [API4]
[
    {{
        "子任务": "通过公司名称XXX公司查询该公司涉案列表。",
        "操作": "API4"
    }},
    {{
        "子任务": "根据案件列表，统计案件数量。",
        "操作": "计数"
    }},
    {{
        "子任务": "根据案件列表，筛选出2020年立案的案件。",
        "操作": "筛选"
    }},
    {{
        "子任务": "根据案件列表，筛选出该公司作为被起诉人的案件。",
        "操作": "筛选"
    }},
    {{
        "子任务": "根据案件列表，对涉案金额进行排序（倒序）。",
        "操作": "排序"
    }},
    {{
        "子任务": "根据排序好的案件列表，选择涉案金额最高的案件。",
        "操作": "索引"
    }}
]
    """.strip(),
        """
问题: XXX公司2021年审理的作为原告的案件中，被告的律师事务所的联系方式是多少？
解题思路: 可以通过公司名称查询该公司的案件列表，再从中筛选出该公司2021年立案的且作为原告的案件，从案件信息中提取出被告律师事务所名称，再根据律师事务所名称查询其联系方式。
api_list: [API4, API12]
[
    {{
        "子任务": "通过公司名称XXX公司查询该公司的案件列表。",
        "操作": "API4"
    }},
    {{
        "子任务": "根据案件列表，筛选出2021年立案的案件。",
        "操作": "筛选"
    }},
    {{
        "子任务": "根据案件列表，筛选出该公司作为原告的案件。",
        "操作": "筛选"
    }},
    {{
        "子任务": "从案件列表中提取出被告律师事务所名称。",
        "操作": "提取"
    }},
    {{
        "子任务": "根据律师事务所名称，查询其联系方式。",
        "操作": "API12"
    }}
]
    """.strip(),
        """
问题: XXX公司作为被告的案件中，最多的案由是哪个？涉及的案件都有哪些？
解题思路: 可以通过公司名称XXX公司查询该公司的案件列表，再从中筛选出该公司作为被告的案件，再根据案件信息对案由做分布统计确定出现次数最多的案由，再根据案由筛选出符合条件的案件。
api_list: [API4]
[
    {{
        "子任务": "通过公司名称XXX公司查询该公司的案件列表。",
        "操作": "API4"
    }},
    {{
        "子任务": "根据案件列表，筛选出该公司作为被告的案件。",
        "操作": "筛选"
    }},
    {{
        "子任务": "根据案件列表，对案由进行分布统计，确定出现次数最多的案由。",
        "操作": "分布统计"
    }},
    {{
        "子任务": "根据案件列表，筛选出符合最多案由名称的案件。",
        "操作": "筛选"
    }},
    {{
        "子任务": "根据筛选好的案件列表，总结案件信息。",
        "操作": "总结"
    }}
]
    """.strip(),
    ],
    "API5": [
        """
问题: XXX公司的母公司是谁？被投资金额是多少？
解题思路: 可以通过公司名称XX公司查询该公司的母公司与被投资金额信息。
api_list: [API5]
[
    {{
        "子任务": "通过公司名称XXX公司查询该公司的母公司与被投资金额信息。",
        "操作": "API5"
    }}
]
    """.strip(),
        """
问题: XXX公司的母公司的法人是谁？
解题思路: 可以通过公司名称XXX公司查询该公司的母公司名称（关联上市公司全称），再根据母公司名称查询其法人信息。
api_list: [API5, API2]
[
    {{
        "子任务": "通过公司名称XXX公司查询该公司的母公司名称（关联上市公司全称）。",
        "操作": "API5"
    }},
    {{
        "子任务": "根据母公司名称，查询其法人信息。",
        "操作": "API2"
    }}
]
    """.strip(),
    ],
    "API6": [
        """
问题: XXX公司的有多少家子公司，其中投资金额第二高的公司是哪家？
解题思路: 可以通过公司名称XXX公司查询所有子公司列表信息，再找到列表里投资金额第二高的子公司。
api_list: [API6]
[
    {{
        "子任务": "通过公司名称XXX公司查询该公司的子公司列表信息。",
        "操作": "API6"
    }},
    {{
        "子任务": "给定子公司列表，统计子公司数量。",
        "操作": "计数"
    }},
    {{
        "子任务": "给定子公司列表，根据投资金额进行排序（倒序）。",
        "操作": "排序"
    }}, 
    {{
        "子任务": "给定排序好的子公司列表，确定投资金额第二高的子公司。",
        "操作": "索引"
    }}
]
    """.strip(),
        """
问题: XXX公司的子公司的一级行业是什么？
解题思路: 可以通过公司名称XXX公司查询该公司的子公司列表信息，再根据子公司名称查询子公司的工商注册信息，获得一级行业信息。
api_list: [API6, 列表API3]
[
    {{
        "子任务": "通过公司名称XXX公司查询该公司的子公司列表。",
        "操作": "API6"
    }},
    {{
        "子任务": "根据子公司列表，通过子公司名称，查询子公司的一级行业信息。",
        "操作": "列表API3"
    }}
]
    """.strip(),
    ],
    "API7": [
        """
问题: XXX公司是否是限制高消费企业，如果是的话，申请人是谁？
解题思路: 可以通过公司名称XXX公司查询该公司的限制高消费案件列表，再从中提取出申请人信息。
api_list: [API7]
[
    {{
        "子任务": "通过公司名称XXX公司查询该公司的限制高消费案件列表。",
        "操作": "API7"
    }},
    {{
        "子任务": "给定高消费案件列表，提取申请人信息。",
        "操作": "提取"
    }}
]
    """.strip(),
        """
问题: XXX公司是否被限制高消费企业，如果被限制，有多少限制高消费案件？涉案总金额是多少？
解题思路: 可以通过公司名称XXX公司查询该公司的子公司列表信息，再根据子公司名称查询子公司的工商注册信息，获得一级行业信息。
api_list: [API7]
[
    {{
        "子任务": "通过公司名称XXX公司查询该公司的限制高消费案件列表。",
        "操作": "API7"
    }},
    {{
        "子任务": "给定案件列表，统计案件数量。",
        "操作": "计数"
    }},
    {{
        "子任务": "给定案件列表，对涉案金额求和。",
        "操作": "求和"
    }}
]
    """.strip(),
    ],
    "API8": [
        """
问题: XXX号的原告和被告分别是谁？判决结果如何？
解题思路: 可以通过XXX案号查询裁判文书信息，获得原告、被告和判决结果。
api_list: [API8]
[
    {{
        "子任务": "通过案号XXX号查询裁判文书信息，获得原告、被告和判决结果。",
        "操作": "API8"
    }}
]
    """.strip(),
        """
问题: XXX号的被告律师事务所的注册资本是多少？
解题思路: 可以通过案号XXX号查询裁判文书信息，获得被告律师事务所名称，再根据律师事务所名称，查询其注册资本。
api_list: [API8, API12]
[
    {{
        "子任务": "通过案号XXX号查询裁判文书信息，获得被告律师事务所名称。",
        "操作": "API8"
    }},
    {{
        "子任务": "通过律师事务所名称，查询其注册资本。",
        "操作": "API12"
    }}
]
    """.strip(),
    ],
    "API9": [
        """
问题: 简洁总结下XXX号的的法律文书文本摘要是什么？
解题思路: 可以通过案号XXX号查询裁判文书信息，获得原告、被告和判决结果。
api_list: [API9]
[
    {{
        "子任务": "通过案号XXX号查询法律文书文本摘要信息，并总结。",
        "操作": "API9"
    }}
]
    """.strip()
    ],
    "API10": [
        """
问题: XXX法院的法院代字是多少？
解题思路: 可以通过法院名称XXX法院查询法院代字。
api_list: [API10]
[
    {{
        "子任务": "通过法院名称XXX法院查询法院代字。",
        "操作": "API10"
    }}
]
    """.strip(),
        """
问题: XXX号的的审理法院的负责人是谁？
解题思路: 可以先从案号XXX号查询法院名称，再根据法院名称查询法院负责人信息。
api_list: [API18, API11]
[
    {{
        "子任务": "根据案号XXX号查询法院名称。",
        "操作": "API18"
    }},
    {{
        "子任务": "根据法院名称，查询法院的负责人。",
        "操作": "API11"
    }},
]
    """.strip(),
    ],
    "API11": [
        """
问题: XXX法院的法院的联系方式是多少？
解题思路: 可以通过法院名称XXX法院查询法院的联系方式。
api_list: [API11]
[
    {{
        "子任务": "通过法院名称XXX法院查询法院的联系方式。",
        "操作": "API11"
    }}
]
    """.strip()
    ],
    "API12": [
        """
问题: XXX事务所负责人是谁？在哪里登记的？
解题思路: 可以通过律师事务所名称XXX律师事务所查询负责人与律所登记机关信息。
api_list: [API12]
[
    {{
        "子任务": "通过律师事务所名称XXX律师事务所查询负责人与律所登记机关信息。",
        "操作": "API12"
    }}
]
    """.strip()
    ],
    "API13": [
        """
问题: XXX号案件中的被告律师事务所，业务量排名是多少？服务过多少上市公司？
解题思路: 可以通过案号XXX号，查询被告律师事务所名称，再通过律师事务所名称其查询业务量排名与服务过的上市公司数量。
api_list: [API8, API13]
[
    {{
        "子任务": "通过案号XXX号查询裁判文书信息，获得被告律师事务所名称。",
        "操作": "API8"
    }},
    {{
        "子任务": "通过律师事务所名称查询其业务量排名和服务过的上市公司数量。",
        "操作": "API13"
    }}
]
    """.strip()
    ],
    "API14": [
        """
问题: XXX地址对应的省份、城市和区县分别是什么？
解题思路: 可以通过地址XXX查询其对应的省份、城市和区县信息。
api_list: [API14]
[
    {{
        "子任务": "通过地址XXX查询其对应的省份、城市和区县信息。",
        "操作": "API14"
    }}
]
    """.strip()
    ],
    "API15": [
        """
问题: XXX地址对应的区县区划代码是多少？
解题思路: 可以通过地址XXX查询其对应的省份、城市和区县信息，再通过省份、城市和区县查询对应的区县区划代码。
api_list: [API14, API15]
[
    {{
        "子任务": "通过地址XXX查询其对应的省份、城市和区县信息。",
        "操作": "API14"
    }},
    {{
        "子任务": "通过省份、城市、区县，查询对应的区县区划代码信息。",
        "操作": "API15"
    }}
]
    """.strip()
    ],
    "API16": [
        """
问题: X省X市，Y日期，天气情况如何，最低气温多少？
解题思路: 可以通过省份、城市、日期信息，查询天气信息并获得最低气温。
api_list: [API16]
[
    {{
        "子任务": "通过X省X市，Y日期查询天气信息，并获得最低气温。",
        "操作": "API16"
    }}
]
    """.strip(),
        """
问题: (2021)辽01民终16020号案件中，审理当天审理法院的天气情况是？
解题思路: 可以通过案号(2021)辽01民终16020号查询审理日期，再根据案号查询法院名称，再根据法院名称查询地址，最后根据审理日期和地址信息查询天气情况。
api_list: [API8, API18, API11, API16]
[
    {{
        "子任务": "通过案号(2021)辽01民终16020号查询审理日期。",
        "操作": "API8"
    }},
    {{
        "子任务": "通过案号(2021)辽01民终16020号查询法院名称。",
        "操作": "API18"
    }},
    {{
        "子任务": "通过法院名称查询法院地址，获得省市信息。",
        "操作": "API11"
    }},
    {{
        "子任务": "通过省市、审理日期查询天气信息。",
        "操作": "API16"
    }}
]
    """.strip(),
        """
问题: (2019)京0101民初11731号案件中，审理当天审理法院与原告的律师事务所所在城市的最低温度相差多少度？
解题思路: 可以先通过案号(2019)京0101民初11731号查询审理日期、案号和原告律师事务所名称，再通过案号查询审理法院名称，再通过法院名称查询法院地址，再通过原告律师事务所名称查询律师地址，再根据法院地址和律师地址，结合审理日期查询两地的天气，最后总结两地的最低气温差值。
api_list: [API8, API18, API11, API12, API16]
[
    {{
        "子任务": "通过案号(2019)京0101民初11731号查询审理日期和原告律师事务所名称。",
        "操作": "API8"
    }},
    {{
        "子任务": "通过案号(2019)京0101民初11731号查询法院名称。",
        "操作": "API18"
    }},
    {{
        "子任务": "通过法院名称查询法院地址。",
        "操作": "API11"
    }},
    {{
        "子任务": "通过原告律师事务所名称查询律师地址。",
        "操作": "API12"
    }},
    {{
        "子任务": "通过法院地址、审理日期查询天气信息。",
        "操作": "API16"
    }},
    {{
        "子任务": "通过原告律师事务所地址、审理日期查询天气信息。",
        "操作": "API16"
    }},
    {{
        "子任务": "根据两个地点的天气信息，总结最低温度以及最低温度相差多少度。",
        "操作": "总结"
    }}
]
    """.strip(),
    ],
    "API18": [
        """
问题: (2021)苏0481民初4582号的审理法院的负责人是谁？
解题思路: 可以通过案号(2021)苏0481民初4582号查询法院名称，再通过法院名称查询法院。
api_list: [API18, API11]
[
    {{
        "子任务": "通过案号(2021)苏0481民初4582号查询法院名称。",
        "操作": "API18"
    }},
    {{
        "子任务": "根据法院名称，查询法院的负责人。",
        "操作": "API11"
    }}
]
    """.strip()
    ],
}


PROMPT_USER_SUE_USER = """
请帮忙完善一个民事起诉状，用于公司起诉公司的情况，起诉状需要提供以下信息：

原告
原告地址
原告法定代表人
原告联系方式
原告委托诉讼代理人
原告委托诉讼代理人联系方式
被告
被告地址
被告法定代表人
被告联系方式
被告委托诉讼代理人
被告委托诉讼代理人联系方式
诉讼请求
事实和理由
证据
法院名称
起诉日期


已知原告和被告的问题描述如下：
{sue_info}


原告的公司相关信息如下：
原告公司注册信息：{company_info1}
原告公司上市公司信息：{company_info2}


被告的公司相关信息如下：
被告公司注册信息：{company_info3}
被告公司上市公司信息：{company_info4}

原告律师事务所信息（委托代理人）：
{lawfirm_info1}

被告律师事务所信息（委托代理人）：
{lawfirm_info2}

----
请按照以下json格式进行输出，可以被Python json.loads函数解析。不回答问题，不作任何解释，不输出其他任何信息，起诉状中所有的字段都要包含，未知情况可填写无。
```json
{{
}}
```
""".strip()
